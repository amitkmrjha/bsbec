
akka.remote.netty.tcp.port = 2252
#akka.cluster.seed-nodes = ["akka.tcp://web-gateway@127.0.0.1:2252"]

http.port=9000


play.application.loader = com.intercax.syndeia.loader.WebGatewayLoader
play.filters.headers.contentSecurityPolicy = "img-src 'self' data:; default-src 'self'; script-src 'unsafe-inline' 'unsafe-eval'"

play.http.secret.key="whatever"

play.i18n.langs = [ "en", "en-US", "fr" ]

play.http.errorHandler = "com.intercax.syndeia.utils.SynErrorHandler"

play.filters.enabled += play.filters.hosts.AllowedHostsFilter
play.filters.hosts {
  # Allow requests to example.com, its subdomains, and localhost:9000.
  #allowed = [".intercax.com", "localhost:9000"]
  allowed = ["."]
}


# Security Filter Configuration - Content Security Policy
play.filters.headers {
  contentSecurityPolicy = "default-src 'self';"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" img-src 'self' *.fbcdn.net *.twimg.com *.googleusercontent.com *.xingassets.com vk.com *.yimg.com secure.gravatar.com;"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" style-src 'self' 'unsafe-inline' cdnjs.cloudflare.com maxcdn.bootstrapcdn.com cdn.jsdelivr.net fonts.googleapis.com https://use.fontawesome.com/releases/v5.6.3/css/all.css;"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" font-src 'self' fonts.gstatic.com fonts.googleapis.com cdnjs.cloudflare.com;"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" script-src 'self' 'unsafe-inline' 'unsafe-eval' cdnjs.cloudflare.com cdn.jsdelivr.net;"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" connect-src 'self' twitter.com *.xing.com;"
}

lagom.circuit-breaker {

  default {
    exception-whitelist = [
      "com.lightbend.lagom.scaladsl.api.transport.BadRequest",
      "com.lightbend.lagom.scaladsl.api.transport.NotFound"
    ]
  }
}
