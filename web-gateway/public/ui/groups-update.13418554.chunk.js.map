{"version":3,"sources":["w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/routes/groups-update/GroupsUpdate.js","w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/routes/groups-update/index.js","w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/lib/formHelper.js","w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/components/BreadCrumb/BreadCrumb.js","w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/components/PageWrapper/PageWrapper.js","w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/components/GroupProfile/GroupProfile.js"],"names":["GroupsUpdate_GroupsUpdate","formData","groupName","selectedUsers","users","selectedGroups","groups","error","loading","_callee","fetch","response","data","regeneratorRuntime","wrap","_context","prev","next","_this","context","constants","sent","json","resources","setState","getUsers","t0","console","stop","this","_callee2","_context2","getGroup","list","key","lodash_default","a","compact","map","members","member","user","find","keys","_callee3","_this$state","baseFormData","_context3","state","concat","props","params","id","assign","createData","_this$state2","some","formHelper","isInputEmpty","each","item","mandatoryFields","every","_this$state3","_objectSpread","userItem","name","type","_toConsumableArray","group","groupItem","_callee4","e","_context4","preventDefault","isValid","openNotifier","openNotify","message","emptyField","variant","abrupt","method","body","JSON","stringify","createRequestBody","headers","Content-Type","status","update","success","src_history","push","_this$state4","_ref2","target","value","event","react_default","Component","getGroups","_state","_jsx","PageWrapper","breadCrumb","GROUP_UPDATE","GroupProfile","handleChangeText","handleSubmit","handleChangeSelectUsers","handleChangeSelectGroups","onCancel","createUser","prop_types_default","func","isRequired","groups_update_GroupsUpdate","Object","es","notifier","withNotifier","title","_ref","chunks","component","groups_update_jsx","Layout","__webpack_exports__","lodash__WEBPACK_IMPORTED_MODULE_0___default","isString","trim","isEmpty","trimObject","object","components_BreadCrumb_BreadCrumb","materialLib","aria-label","lodash","module","route","Link","style","textDecoration","to","label","color","PageWrapper_PageWrapper","children","classes","createElement","Fragment","PageWrapper_jsx","className","paper","defaultProps","theme","display","flexDirection","alignItems","padding","spacing","unit","margin","width","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","_materialLib__WEBPACK_IMPORTED_MODULE_4__","form","submit","backgroundColor","_constants__WEBPACK_IMPORTED_MODULE_5__","NAVY_BLUE","marginRight","textTransform","formControl","maxWidth","textField","marginBottom","chip","WHITE","btnWrapper","progress","InputLabelRef","_useState2","_slicedToArray","react__WEBPACK_IMPORTED_MODULE_0__","labelWidth","setLabelWidth","react_dom__WEBPACK_IMPORTED_MODULE_2___default","findDOMNode","offsetWidth","onChange","borderColor","fullWidth","required","react__WEBPACK_IMPORTED_MODULE_0___default","ref","htmlFor","multiple","input","renderValue","selected","chips","primary","onClick","size"],"mappings":"28DAeMA,yYAeFC,UACEC,UAAW,IAEbC,iBACAC,SACAC,kBACAC,UACAC,OACEL,UAAW,IAEbM,SAAS,wIAOC,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAN,EAAA,OAAAO,mBAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACFP,EAAUQ,EAAKC,QAAfT,MADEK,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGeP,YAASU,EAAA,EAASd,SAHjC,cAGFK,EAHEI,EAAAM,KAAAN,EAAAE,KAAA,EAIWN,EAASW,OAJpB,OAIFV,EAJEG,EAAAM,KAKFf,EAASM,EAAKW,UACpBL,EAAKM,UAEDlB,UAEF,WACEY,EAAKO,aAXDV,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAeRY,QAAQpB,MAARQ,EAAAW,IAfQ,yBAAAX,EAAAa,SAAAnB,EAAAoB,OAAA,oMAmBD,SAAAC,IAAA,IAAApB,EAAAC,EAAAC,EAAAR,EAAA,OAAAS,mBAAAC,KAAA,SAAAiB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,cACDP,EAAUQ,EAAKC,QAAfT,MADCqB,EAAAf,KAAA,EAAAe,EAAAd,KAAA,EAGgBP,YAASU,EAAA,EAAShB,QAHlC,cAGDO,EAHCoB,EAAAV,KAAAU,EAAAd,KAAA,EAIYN,EAASW,OAJrB,OAIDV,EAJCmB,EAAAV,KAKDjB,EAAQQ,EAAKW,UACnBL,EAAKM,UAEDpB,SAEF,WACEc,EAAKc,aAXFD,EAAAd,KAAA,iBAAAc,EAAAf,KAAA,GAAAe,EAAAL,GAAAK,EAAA,SAePJ,QAAQpB,MAARwB,EAAAL,IAfO,yBAAAK,EAAAH,SAAAE,EAAAD,OAAA,2JAmBE,SAAC5B,EAAUgC,EAAMC,GAAjB,OACXC,EAAAC,EAAEC,QACAF,EAAAC,EAAEE,IAAIrC,EAASsC,QAAS,SAAAC,GACtB,IAAMC,EAAON,EAAAC,EAAEM,KAAKT,GAAQU,MAAQT,IAAKM,EAAON,OAChD,GAAIO,EACF,OAAOA,EAAKP,2IAKT,SAAAU,IAAA,IAAAlC,EAAAmC,EAAAC,EAAA1C,EAAAE,EAAAK,EAAAV,EAAA,OAAAY,mBAAAC,KAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cACDP,EAAUQ,EAAKC,QAAfT,MADCmC,EAEyC3B,EAAK8B,MAArCF,EAFTD,EAED5C,SAAwBG,EAFvByC,EAEuBzC,MAAOE,EAF9BuC,EAE8BvC,OAF9ByC,EAAA/B,KAAA,EAAA+B,EAAA9B,KAAA,EAIgBP,YAClBU,EAAA,EAASd,OADS,KAAA2C,OACC/B,EAAKgC,MAAMC,OAAOC,KALnC,cAIDzC,EAJCoC,EAAA1B,KAAA0B,EAAA9B,KAAA,EAOcN,EAASW,OAPvB,OAOHrB,EAPG8C,EAAA1B,KAQPpB,EAAWkC,EAAAC,EAAEiB,OAAOP,EAAc7C,EAASsB,WAC3CL,EAAKM,UACHvB,WACAE,cAAee,EAAKoC,WAAWrD,EAAUG,EAAO,QAChDC,eAAgBa,EAAKoC,WAAWrD,EAAUK,EAAQ,eAZ7CyC,EAAA9B,KAAA,iBAAA8B,EAAA/B,KAAA,GAAA+B,EAAArB,GAAAqB,EAAA,SAePpB,QAAQpB,MAARwC,EAAArB,IAfO,yBAAAqB,EAAAnB,SAAAgB,EAAAf,OAAA,wJAmBD,WAAM,IAAA0B,EACcrC,EAAK8B,MAAzB/C,EADMsD,EACNtD,SAAUM,EADJgD,EACIhD,MACVL,EAAcD,EAAdC,UAWR,OAVIiC,EAAAC,EAAEoB,MAAMtD,GAAYuD,EAAA,EAAWC,eACjCvB,EAAAC,EAAEuB,KAAKvC,EAAA,EAAc,SAAAwC,GACnBrD,EAAMqD,GAAQH,EAAA,EAAWC,aAAazD,EAAS2D,IAC3CxC,EAAA,EAASyC,gBACT,KAIR3C,EAAKM,UAAWjB,UAET4B,EAAAC,EAAE0B,MAAMvD,EAAOkD,EAAA,EAAWC,iHAGf,WAAM,IAAAK,EAOpB7C,EAAK8B,MALP7C,EAFsB4D,EAEtB5D,cACAF,EAHsB8D,EAGtB9D,SACAG,EAJsB2D,EAItB3D,MACAE,EALsByD,EAKtBzD,OACAD,EANsB0D,EAMtB1D,eAuBF,yUAAA2D,IAAY/D,GAAUsC,QApBtBA,EACKJ,EAAAC,EAAEE,IAAInC,EAAe,SAAAsC,GACtB,IAAMwB,EAAW9B,EAAAC,EAAEM,KAAKtC,GAAS8D,KAAMzB,IACvC,GAAIwB,EACF,OACEE,KAAM,gBACNjC,IAAK+B,EAAStB,KAAKT,QAN3Be,OAAAmB,EAUKjC,EAAAC,EAAEE,IAAIjC,EAAgB,SAAAgE,GACvB,IAAMC,EAAYnC,EAAAC,EAAEM,KAAKpC,GAAUJ,UAAWmE,IAC9C,GAAIC,EACF,OACEH,KAAM,iBACNjC,IAAKoC,EAAU3B,KAAKT,oJAQf,SAAAqC,EAAMC,GAAN,IAAA9D,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,KAAA,SAAA2D,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAxD,MAAA,cACLP,EAAUQ,EAAKC,QAAfT,MACR8D,EAAEE,iBAFWD,EAAAxD,KAAA,EAISC,EAAKyD,UAJd,UAAAF,EAAApD,KAAA,CAAAoD,EAAAxD,KAAA,eAAAwD,EAAAxD,KAAA,EAOLC,EAAKgC,MAAM0B,cACfC,YAAY,EACZC,QAAS1D,EAAA,EAAS2D,WAClBC,QAAS,YAVA,cAAAP,EAAAQ,OAAA,wBAAAR,EAAAxD,KAAA,GAePC,EAAKM,UAAWhB,SAAS,IAflB,eAAAiE,EAAAzD,KAAA,GAAAyD,EAAAxD,KAAA,GAkBYP,YAClBU,EAAA,EAASd,OADS,KAAA2C,OACC/B,EAAKgC,MAAMC,OAAOC,KAEtC8B,OAAQ,MACRC,KAAMC,KAAKC,UAAUnE,EAAKoE,qBAC1BC,SACEC,eAAgB,sBAxBX,eAkBL7E,EAlBK8D,EAAApD,KAAAoD,EAAAxD,KAAA,GA4BQN,EAASW,OA5BjB,WA4BLV,EA5BK6D,EAAApD,KA6Ba,MAApBV,EAAS8E,OA7BF,CAAAhB,EAAAxD,KAAA,gBAAAwD,EAAAxD,KAAA,GA8BHC,EAAKgC,MAAM0B,cACfC,YAAY,EACZC,QAAS1D,EAAA,EAASiD,MAAMqB,OAAOC,QAC/BX,QAAS,YAjCF,QAmCTY,EAAA,EAAQC,KAAK,oBAnCJpB,EAAAxD,KAAA,oBAoCoB,MAApBN,EAAS8E,OApCT,CAAAhB,EAAAxD,KAAA,gBAAAwD,EAAAxD,KAAA,GAqCHC,EAAKgC,MAAM0B,cACfC,YAAY,EACZC,QAASlE,EAAKW,UACdyD,QAAS,UAxCF,eAAAP,EAAAxD,KAAA,GA2CLC,EAAKM,UAAWhB,SAAS,IA3CpB,QAAAiE,EAAAxD,KAAA,iBAAAwD,EAAAzD,KAAA,GAAAyD,EAAA/C,GAAA+C,EAAA,UA6CX9C,QAAQpB,MAARkE,EAAA/C,IA7CW,yBAAA+C,EAAA7C,SAAA2C,EAAA1C,OAAA,mKAiDI,SAAA2C,GAAK,IAAAsB,EACM5E,EAAK8B,MAAzB/C,EADc6F,EACd7F,SAAUM,EADIuF,EACJvF,MADIwF,EAEAvB,GAAKA,EAAEwB,OAArB5C,EAFc2C,EAEd3C,GAAI6C,EAFUF,EAEVE,MACZhG,EAASmD,GAAM6C,EACf1F,EAAM6C,GAAMK,EAAA,EAAWC,aAAazD,EAASmD,IACzChC,EAAA,EAASyC,gBACT,GACJ3C,EAAKM,UAAWvB,WAAUM,mHAGF,SAAA2F,GACxBhF,EAAKM,UAAWrB,cAAe+F,EAAMF,OAAOC,kHAGnB,SAAAC,GACzBhF,EAAKM,UAAWnB,eAAgB6F,EAAMF,OAAOC,kGAGpC,WACTL,EAAA,EAAQC,KAAK,+UAvNUM,EAAA/D,EAAMgE,uGA6B7BvE,KAAKwE,6CA6LE,IAAAC,EASHzE,KAAKmB,MAPP/C,EAFKqG,EAELrG,SACAM,EAHK+F,EAGL/F,MACAH,EAJKkG,EAILlG,MACAD,EALKmG,EAKLnG,cACAG,EANKgG,EAMLhG,OACAD,EAPKiG,EAOLjG,eACAG,EARK8F,EAQL9F,QAEF,OACE+F,EAACC,EAAA,GAAYC,WAAYrF,EAAA,EAAYsF,mBAArC,EACEH,EAACI,EAAA,GACC1G,SAAUA,EACVG,MAAOA,EACPD,cAAeA,EACfG,OAAQA,EACRD,eAAgBA,EAChBE,MAAOA,EACPqG,iBAAkB/E,KAAK+E,iBACvBC,aAAchF,KAAKgF,aACnBC,wBAAyBjF,KAAKiF,wBAC9BC,yBAA0BlF,KAAKkF,yBAC/B5C,KAAK,eACL6C,SAAUnF,KAAKmF,SACfC,YAAA,EACAzG,QAASA,oCApPbR,mEAOF4E,aAAc,sCAPZ5E,mEAWFU,MAAOwG,EAAA9E,EAAU+E,KAAKC,cAgP1B,MAAAC,EAAeC,OAAAC,EAAA,EAAAD,CAAQ,MACrB1C,aAAA4C,EAAA,GADF,CAEGF,OAAAG,EAAA,EAAAH,CAAatH,ibCxQhB,IAAM0H,EAAQ,kVAEd,SAAAjH,EAAAkH,GAAA,IAAAxE,EAAA,OAAAtC,mBAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAwBkC,EAAxBwE,EAAwBxE,OAAxBpC,EAAAkE,OAAA,UAEI2C,QAAS,iBACTF,QACAG,UACEC,EAACC,EAAA,UAAD,EACED,EAACT,GAAaK,MAAOA,EAAOvE,OAAQA,OAN5C,wBAAApC,EAAAa,SAAAnB,EAAAoB,gCAYAmG,EAAA,2GChBAA,EAAA,GACEtE,aAAc,SAAAuC,GAAA,OACZgC,EAAA7F,EAAE8F,SAASjC,IAAUgC,EAAA7F,EAAE+F,KAAKlC,GAASgC,EAAA7F,EAAEgG,QAAQnC,IACjDoC,WAAY,SAAAC,GAAA,OAEVL,EAAA7F,EAAEuB,KAAK2E,EAAQ,SAACrC,EAAO/D,GAAR,OAAiBoG,EAAOpG,GAAO+F,EAAA7F,EAAE+F,KAAKlC,+gBCIzD,MA2BAsC,EA3BmB,SAAArF,GAAA,OACjBqD,EAACiC,EAAA,GAAYC,aAAW,mBAAxB,EACGnB,OAAAoB,EAAA,IAAApB,CAAIpE,EAAMuD,WAAY,SAAAkC,GACrB,OAAIA,EAAOC,MAEPrC,EAACsC,EAAA,GAECC,OAASC,eAAgB,QACzBC,GAAIL,EAAOC,OAFND,EAAOM,MAIXN,EAAOM,OAKZ1C,EAACiC,EAAA,IAA8BU,MAAM,eAApBP,EAAOM,MACrBN,EAAOM,wbCnBlB,IAYME,EAAc,SAAAjG,GAAS,IACnBkG,EAAyClG,EAAzCkG,SAAU3C,EAA+BvD,EAA/BuD,WAAY4C,EAAmBnG,EAAnBmG,QAASP,EAAU5F,EAAV4F,MACvC,OACE3C,EAAA/D,EAAAkH,cAAAnD,EAAA/D,EAAAmH,SAAA,KACEC,EAACjB,GAAW9B,WAAYA,IACxB+C,EAAChB,EAAA,GAAMiB,UAAWJ,EAAQK,MAAOZ,OAAQxB,OAAAoB,EAAA,YAAApB,CAAYwB,IAAUA,QAA/D,EACGM,KAaTD,EAAYQ,cACVb,SACArC,cACA2C,aAGFpB,EAAA,EAAeV,OAAAkB,EAAA,GAAAlB,CArCA,SAAAsC,GAAA,OACbF,OACEG,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,kBAAiC,EAArBJ,EAAMK,QAAQC,KAA1B,OAAAjH,OAA6D,EAArB2G,EAAMK,QAAQC,KAAtD,OAAAjH,OACkB,EADkD2G,EACjEK,QAAQC,KADX,MAEAC,iBAAgC,EAArBP,EAAMK,QAAQC,KAAzB,aACAE,MAAO,SA6BX,CAAkCjB,66BCzBlC,IAGMkB,GACJC,YACExB,OACEyB,UAAWC,IACXJ,MAAO,OAuMbpC,EAAA,EAAeV,OAAAmD,EAAA,GAAAnD,CAlMA,SAAAsC,GAAA,OACbc,MACEN,MAAO,OACPD,iBAAWP,EAAMK,QAAQC,KAAzB,cAEFS,QACEC,gBAAiBC,EAAA,EAAOC,UACxBC,YAAanB,EAAMK,QAAQC,KAC3Bc,cAAe,cAGjBC,aACEd,mBAAkC,EAArBP,EAAMK,QAAQC,KAA3B,OAAAjH,OAA8D,EAArB2G,EAAMK,QAAQC,KAAvD,QACAgB,SAAU,IACVd,MAAO,QAETe,WACEC,aAAc,IAEhBC,MACElB,OAAQP,EAAMK,QAAQC,KAAO,EAC7BU,gBAAiBC,EAAA,EAAOC,UACxB5B,MAAO2B,EAAA,EAAOS,OAEhBC,YACEpB,iBAAgC,EAArBP,EAAMK,QAAQC,KAAzB,WACAE,MAAO,OAEToB,UACErB,OAAQ,EACRjB,MAAO,WAoKX,CAhKqB,SAAAhG,GACnB,IAAIuI,EAAgB,KAElBpC,EAcEnG,EAdFmG,QACApJ,EAaEiD,EAbFjD,SACAM,EAYE2C,EAZF3C,MACAqG,EAWE1D,EAXF0D,iBACAC,EAUE3D,EAVF2D,aACAC,EASE5D,EATF4D,wBACAC,EAQE7D,EARF6D,yBACA5C,EAOEjB,EAPFiB,KACA/D,EAME8C,EANF9C,MACAD,EAKE+C,EALF/C,cACAE,EAIE6C,EAJF7C,eACAC,EAGE4C,EAHF5C,OACA0G,EAEE9D,EAFF8D,SACAxG,EACE0C,EADF1C,QAEMN,EAAcD,EAAdC,UAlBoBwL,EAAAC,EAmBQrE,OAAAsE,EAAA,SAAAtE,CAAS,GAnBjB,GAmBrBuE,EAnBqBH,EAAA,GAmBTI,EAnBSJ,EAAA,GA6B5B,OARApE,OAAAsE,EAAA,UAAAtE,CACE,kBACEwE,EACE,SAAAD,GAAA,OAAcE,EAAA3J,EAAS4J,YAAYP,GAAeQ,mBAMtD1F,EAAA,QAAMkD,UAAWJ,EAAQqB,WAAzB,EACEnE,EAACkE,EAAA,IACCrH,GAAG,YACH6F,MAAM,aACNQ,UAAWJ,EAAQ8B,UACnBlF,MAAO/F,EACPgM,SAAUtF,EACVuD,OAAO,SACPnF,QAAQ,WACR8D,OAASqD,YAAa5L,EAAML,UAAY,MAAQ,IAChDkM,WAAA,EACAC,UAAA,IAEF9F,EAACkE,EAAA,GAAYzF,QAAQ,WAAWyE,UAAWJ,EAAQ4B,kBAAnD,EACEqB,EAAAlK,EAAAkH,cAACmB,EAAA,GACC8B,IAAK,SAAA5E,GACH8D,EAAgBc,GAElBC,QAAQ,8BAJV,SAQAjG,EAACkE,EAAA,IACCgC,UAAA,EACAxG,MAAO9F,EACP+L,SAAUpF,EACV4F,MACEnG,EAACkE,EAAA,GACCvG,KAAK,QACL2H,WAAYA,EACZzI,GAAG,wBAGPuJ,YAAa,SAAAC,GAAA,OACXrG,EAAA,OAAKkD,UAAWJ,EAAQwD,YAAxB,EACGD,EAAStK,IAAI,SAAA2D,GAAA,OACZM,EAACkE,EAAA,GAAiBxB,MAAOhD,EAAOwD,UAAWJ,EAAQgC,MAAxCpF,OAIjBoE,UAAWA,QAlBb,EAoBGjK,EAAMkC,IAAI,SAAAG,GAAA,OACT8D,EAACkE,EAAA,GAA6BxE,MAAOxD,EAAKyB,MAA3BzB,EAAKE,KAAKT,IACvBqE,EAACkE,EAAA,GAAaqC,QAASrK,EAAKyB,YAKpCqC,EAACkE,EAAA,GAAYzF,QAAQ,WAAWyE,UAAWJ,EAAQ4B,kBAAnD,EACEqB,EAAAlK,EAAAkH,cAACmB,EAAA,GACC8B,IAAK,SAAAxG,GACH0F,EAAgBc,GAElBC,QAAQ,8BAJV,UAQAjG,EAACkE,EAAA,IACCgC,UAAA,EACAxG,MAAO5F,EACP6L,SAAUnF,EACV2F,MACEnG,EAACkE,EAAA,GACCvG,KAAK,SACL2H,WAAYA,EACZzI,GAAG,wBAGPuJ,YAAa,SAAAC,GAAA,OACXrG,EAAA,OAAKkD,UAAWJ,EAAQwD,YAAxB,EACGD,EAAStK,IAAI,SAAA2D,GAAA,OACZM,EAACkE,EAAA,GAAiBxB,MAAOhD,EAAOwD,UAAWJ,EAAQgC,MAAxCpF,OAIjBoE,UAAWA,QAlBb,EAoBG/J,EAAOgC,IAAI,SAAA+B,GAAA,OACVkC,EAACkE,EAAA,GAA8BxE,MAAO5B,EAAMnE,WAA7BmE,EAAM1B,KAAKT,IACxBqE,EAACkE,EAAA,GAAaqC,QAASzI,EAAMnE,iBAKrCqG,EAAA,OAAKkD,UAAWJ,EAAQkC,iBAAxB,EACEhF,EAACkE,EAAA,GACCtG,KAAK,SACLa,QAAQ,YACRkE,MAAM,UACNO,UAAWJ,EAAQsB,OACnBoC,QAASlG,QALX,EAOGrG,EACC+F,EAACkE,EAAA,GAAiBuC,KAAM,GAAIvD,UAAWJ,EAAQmC,WAE/CrH,GAGJoC,EAACkE,EAAA,GACCtG,KAAK,SACLa,QAAQ,YACRkE,MAAM,UACNO,UAAWJ,EAAQsB,OACnBoC,QAAS/F,QALX","file":"groups-update.13418554.chunk.js","sourcesContent":["/* eslint-disable consistent-return */\n/* eslint-disable import/no-duplicates */\n/* eslint-disable react/sort-comp */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\nimport { GROUP_FIELDS, API_URLS, MESSAGES, BREADCRUMBS } from '../../constants';\nimport formHelper from '../../lib/formHelper';\nimport GroupProfile from '../../components/GroupProfile/GroupProfile';\nimport history from '../../history';\nimport PageWrapper from '../../components/PageWrapper';\nimport { openNotifier } from '../../actions/notifier';\nimport withNotifier from '../../actions/withNotifier';\n\nclass GroupsUpdate extends React.Component {\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    openNotifier: PropTypes.func,\n  };\n\n  static defaultProps = {\n    openNotifier: () => {},\n  };\n\n  static contextTypes = {\n    fetch: PropTypes.func.isRequired,\n  };\n\n  state = {\n    formData: {\n      groupName: '',\n    },\n    selectedUsers: [],\n    users: [],\n    selectedGroups: [],\n    groups: [],\n    error: {\n      groupName: '',\n    },\n    loading: false,\n  };\n\n  componentDidMount() {\n    this.getGroups();\n  }\n\n  getGroups = async () => {\n    const { fetch } = this.context;\n    try {\n      const response = await fetch(`${API_URLS.groups}`);\n      const data = await response.json();\n      const groups = data.resources;\n      this.setState(\n        {\n          groups,\n        },\n        () => {\n          this.getUsers();\n        },\n      );\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  getUsers = async () => {\n    const { fetch } = this.context;\n    try {\n      const response = await fetch(`${API_URLS.users}`);\n      const data = await response.json();\n      const users = data.resources;\n      this.setState(\n        {\n          users,\n        },\n        () => {\n          this.getGroup();\n        },\n      );\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  createData = (formData, list, key) =>\n    _.compact(\n      _.map(formData.members, member => {\n        const user = _.find(list, { keys: { key: member.key } });\n        if (user) {\n          return user[key];\n        }\n      }),\n    );\n\n  getGroup = async () => {\n    const { fetch } = this.context;\n    const { formData: baseFormData, users, groups } = this.state;\n    try {\n      const response = await fetch(\n        `${API_URLS.groups}/${this.props.params.id}`,\n      );\n      let formData = await response.json();\n      formData = _.assign(baseFormData, formData.resources);\n      this.setState({\n        formData,\n        selectedUsers: this.createData(formData, users, 'name'),\n        selectedGroups: this.createData(formData, groups, 'groupName'),\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  isValid = () => {\n    const { formData, error } = this.state;\n    const { groupName } = formData;\n    if (_.some([groupName], formHelper.isInputEmpty)) {\n      _.each(GROUP_FIELDS, item => {\n        error[item] = formHelper.isInputEmpty(formData[item])\n          ? MESSAGES.mandatoryFields\n          : '';\n      });\n    }\n\n    this.setState({ error });\n\n    return _.every(error, formHelper.isInputEmpty);\n  };\n\n  createRequestBody = () => {\n    const {\n      selectedUsers,\n      formData,\n      users,\n      groups,\n      selectedGroups,\n    } = this.state;\n    let members = [];\n    members = [\n      ..._.map(selectedUsers, user => {\n        const userItem = _.find(users, { name: user });\n        if (userItem) {\n          return {\n            type: 'UserReference',\n            key: userItem.keys.key,\n          };\n        }\n      }),\n      ..._.map(selectedGroups, group => {\n        const groupItem = _.find(groups, { groupName: group });\n        if (groupItem) {\n          return {\n            type: 'GroupReference',\n            key: groupItem.keys.key,\n          };\n        }\n      }),\n    ];\n    return { ...formData, members };\n  };\n\n  handleSubmit = async e => {\n    const { fetch } = this.context;\n    e.preventDefault();\n\n    const isValid = await this.isValid();\n\n    if (!isValid) {\n      await this.props.openNotifier({\n        openNotify: true,\n        message: MESSAGES.emptyField,\n        variant: 'warning',\n      });\n      return;\n    }\n\n    await this.setState({ loading: true });\n\n    try {\n      const response = await fetch(\n        `${API_URLS.groups}/${this.props.params.id}`,\n        {\n          method: 'PUT',\n          body: JSON.stringify(this.createRequestBody()),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        },\n      );\n      const data = await response.json();\n      if (response.status === 201) {\n        await this.props.openNotifier({\n          openNotify: true,\n          message: MESSAGES.group.update.success,\n          variant: 'success',\n        });\n        history.push('/user-management');\n      } else if (response.status === 400) {\n        await this.props.openNotifier({\n          openNotify: true,\n          message: data.resources,\n          variant: 'error',\n        });\n      }\n      await this.setState({ loading: false });\n    } catch (er) {\n      console.error(er);\n    }\n  };\n\n  handleChangeText = e => {\n    const { formData, error } = this.state;\n    const { id, value } = e && e.target;\n    formData[id] = value;\n    error[id] = formHelper.isInputEmpty(formData[id])\n      ? MESSAGES.mandatoryFields\n      : '';\n    this.setState({ formData, error });\n  };\n\n  handleChangeSelectUsers = event => {\n    this.setState({ selectedUsers: event.target.value });\n  };\n\n  handleChangeSelectGroups = event => {\n    this.setState({ selectedGroups: event.target.value });\n  };\n\n  onCancel = () => {\n    history.push('/user-management');\n  };\n\n  render() {\n    const {\n      formData,\n      error,\n      users,\n      selectedUsers,\n      groups,\n      selectedGroups,\n      loading,\n    } = this.state;\n    return (\n      <PageWrapper breadCrumb={BREADCRUMBS.GROUP_UPDATE}>\n        <GroupProfile\n          formData={formData}\n          users={users}\n          selectedUsers={selectedUsers}\n          groups={groups}\n          selectedGroups={selectedGroups}\n          error={error}\n          handleChangeText={this.handleChangeText}\n          handleSubmit={this.handleSubmit}\n          handleChangeSelectUsers={this.handleChangeSelectUsers}\n          handleChangeSelectGroups={this.handleChangeSelectGroups}\n          type=\"Update Group\"\n          onCancel={this.onCancel}\n          createUser\n          loading={loading}\n        />\n      </PageWrapper>\n    );\n  }\n}\n\nexport default connect(null, {\n  openNotifier,\n})(withNotifier(GroupsUpdate));\n","import React from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport GroupsUpdate from './GroupsUpdate';\n\nconst title = 'Update Group';\n\nasync function action({ params }) {\n  return {\n    chunks: ['groups-update'],\n    title,\n    component: (\n      <Layout>\n        <GroupsUpdate title={title} params={params} />\n      </Layout>\n    ),\n  };\n}\n\nexport default action;\n","import _ from 'lodash';\n\nexport default {\n  isInputEmpty: value =>\n    _.isString(value) ? !_.trim(value) : _.isEmpty(value),\n  trimObject: object =>\n    // eslint-disable-next-line no-param-reassign,no-return-assign\n    _.each(object, (value, key) => (object[key] = _.trim(value))),\n};\n","/* eslint-disable react/prop-types */\n/* eslint-disable import/no-extraneous-dependencies */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { map } from 'lodash';\nimport {\n    Breadcrumbs,\n    Typography,\n} from '../../materialLib';\nimport Link from '../Link';\n\nconst BreadCrumb = props => (\n  <Breadcrumbs aria-label=\"Breadcrumb\">\n    {map(props.breadCrumb, module => {\n      if (module.route) {\n        return (\n          <Link\n            key={module.label}\n            style={{ textDecoration: 'none' }}\n            to={module.route}\n          >\n            {module.label}\n          </Link>\n        );\n      }\n      return (\n        <Typography key={module.label} color=\"textPrimary\">\n          {module.label}\n        </Typography>\n      );\n    })}\n  </Breadcrumbs>\n);\n\nBreadCrumb.propTypes = {\n  breadCrumb: PropTypes.array.isRequired,\n};\n\nexport default BreadCrumb;\n","/* eslint-disable react/prop-types */\n/* eslint-disable import/no-extraneous-dependencies */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUndefined } from 'lodash';\nimport BreadCrumb from '../BreadCrumb';\nimport { Paper, withStyles } from '../../materialLib';\n\nconst styles = theme => ({\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\n      .spacing.unit * 3}px`,\n    margin: `${theme.spacing.unit * 5}px auto 0`,\n    width: '40%',\n  },\n});\n\nconst PageWrapper = props => {\n  const { children, breadCrumb, classes, style } = props;\n  return (\n    <>\n      <BreadCrumb breadCrumb={breadCrumb} />\n      <Paper className={classes.paper} style={!isUndefined(style) && style}>\n        {children}\n      </Paper>\n    </>\n  );\n};\n\nPageWrapper.propTypes = {\n  children: PropTypes.node,\n  breadCrumb: PropTypes.array,\n  classes: PropTypes.object.isRequired,\n  style: PropTypes.object,\n};\n\nPageWrapper.defaultProps = {\n  style: {},\n  breadCrumb: [],\n  children: []\n};\n\nexport default withStyles(styles)(PageWrapper);\n","/* eslint-disable import/no-extraneous-dependencies */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport _ from 'lodash';\nimport {\n  Button,\n  withStyles,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  ListItemText,\n  OutlinedInput,\n  Chip,\n  CircularProgress,\n} from '../../materialLib';\nimport { COLORS } from '../../constants';\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\n\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst styles = theme => ({\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    margin: `${theme.spacing.unit}px auto 0`,\n  },\n  submit: {\n    backgroundColor: COLORS.NAVY_BLUE,\n    marginRight: theme.spacing.unit,\n    textTransform: 'capitalize',\n  },\n\n  formControl: {\n    margin: `0 ${theme.spacing.unit * 5}px ${theme.spacing.unit * 3}px 0`,\n    maxWidth: 530,\n    width: '100%',\n  },\n  textField: {\n    marginBottom: 20,\n  },\n  chip: {\n    margin: theme.spacing.unit / 4,\n    backgroundColor: COLORS.NAVY_BLUE,\n    color: COLORS.WHITE,\n  },\n  btnWrapper: {\n    margin: `${theme.spacing.unit * 3}px auto`,\n    width: '40%',\n  },\n  progress: {\n    margin: 0,\n    color: 'white',\n  },\n});\n\nconst GroupProfile = props => {\n  let InputLabelRef = null;\n  const {\n    classes,\n    formData,\n    error,\n    handleChangeText,\n    handleSubmit,\n    handleChangeSelectUsers,\n    handleChangeSelectGroups,\n    type,\n    users,\n    selectedUsers,\n    selectedGroups,\n    groups,\n    onCancel,\n    loading,\n  } = props;\n  const { groupName } = formData;\n  const [labelWidth, setLabelWidth] = useState(0);\n\n  useEffect(\n    () =>\n      setLabelWidth(\n        labelWidth => ReactDOM.findDOMNode(InputLabelRef).offsetWidth,\n      ),\n    [],\n  );\n\n  return (\n    <form className={classes.form}>\n      <TextField\n        id=\"groupName\"\n        label=\"Group Name\"\n        className={classes.textField}\n        value={groupName}\n        onChange={handleChangeText}\n        margin=\"normal\"\n        variant=\"outlined\"\n        style={{ borderColor: error.groupName ? 'red' : '' }}\n        fullWidth\n        required\n      />\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel\n          ref={ref => {\n            InputLabelRef = ref;\n          }}\n          htmlFor=\"outlined-age-native-simple\"\n        >\n          Users\n        </InputLabel>\n        <Select\n          multiple\n          value={selectedUsers}\n          onChange={handleChangeSelectUsers}\n          input={\n            <OutlinedInput\n              name=\"Users\"\n              labelWidth={labelWidth}\n              id=\"outlined-age-simple\"\n            />\n          }\n          renderValue={selected => (\n            <div className={classes.chips}>\n              {selected.map(value => (\n                <Chip key={value} label={value} className={classes.chip} />\n              ))}\n            </div>\n          )}\n          MenuProps={MenuProps}\n        >\n          {users.map(user => (\n            <MenuItem key={user.keys.key} value={user.name}>\n              <ListItemText primary={user.name} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel\n          ref={ref => {\n            InputLabelRef = ref;\n          }}\n          htmlFor=\"outlined-age-native-simple\"\n        >\n          Groups\n        </InputLabel>\n        <Select\n          multiple\n          value={selectedGroups}\n          onChange={handleChangeSelectGroups}\n          input={\n            <OutlinedInput\n              name=\"Groups\"\n              labelWidth={labelWidth}\n              id=\"outlined-age-simple\"\n            />\n          }\n          renderValue={selected => (\n            <div className={classes.chips}>\n              {selected.map(value => (\n                <Chip key={value} label={value} className={classes.chip} />\n              ))}\n            </div>\n          )}\n          MenuProps={MenuProps}\n        >\n          {groups.map(group => (\n            <MenuItem key={group.keys.key} value={group.groupName}>\n              <ListItemText primary={group.groupName} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <div className={classes.btnWrapper}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={handleSubmit}\n        >\n          {loading ? (\n            <CircularProgress size={22} className={classes.progress} />\n          ) : (\n            type\n          )}\n        </Button>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={onCancel}\n        >\n          Cancel\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nGroupProfile.propTypes = {\n  classes: PropTypes.object.isRequired,\n  formData: PropTypes.object.isRequired,\n  error: PropTypes.object.isRequired,\n  handleChangeText: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  handleChangeSelectUsers: PropTypes.func.isRequired,\n  handleChangeSelectGroups: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired,\n  users: PropTypes.array.isRequired,\n  selectedUsers: PropTypes.array.isRequired,\n  selectedGroups: PropTypes.array.isRequired,\n  groups: PropTypes.array.isRequired,\n  onCancel: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n};\n\nexport default withStyles(styles)(GroupProfile);\n"],"sourceRoot":""}