{"version":3,"sources":["w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/routes/users-update/UsersUpdate.js","w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/routes/users-update/index.js","w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/lib/formHelper.js","w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/components/BreadCrumb/BreadCrumb.js","w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/components/PageWrapper/PageWrapper.js","w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/actions/withUserManagement.js","w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/components/UserProfile/UserProfile.js","w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/routes/reset-password/ResetPassword.js"],"names":["TabContainer","_ref","children","_jsx","materialLib","component","style","padding","width","minHeight","maxHeight","overflow","VerticalTabs","Object","flexContainer","flexDirection","indicator","display","MyTab","selected","color","constants","NAVY_BLUE","background","title","aria-label","UsersUpdate_UsersUpdate","formData","firstName","lastName","username","password","permissions","roles","error","loading","resetPasswordLoading","modalOpen","activeIndex","_callee","fetch","userManagement","baseFormData","newPermissions","response","regeneratorRuntime","wrap","_context","prev","next","_this","context","props","state","lodash","users","concat","params","id","sent","json","resources","permission","checked","obj","name","_toConsumableArray","role","setState","t0","console","stop","this","_this$state","newPassword","formHelper","isInputEmpty","item","mandatoryFields","_this$state2","_callee2","e","data","_context2","filter","map","value","preventDefault","isValidUserDetails","openNotifier","openNotify","message","emptyField","variant","abrupt","method","body","JSON","stringify","headers","Content-Type","statusCode","getResponse","user","update","success","src_history","push","_callee3","_context3","isValidResetPasswordForm","resetPassword","ok","_callee4","profiles","isNormalUser","loginInfo","isValid","_context4","find","email","disableUser","enableUser","_this$state3","_ref3","target","_this$state4","_ref4","event","length","_","_this$state5","checkIfEnabledOrDisabledUser","react_default","a","Component","_state","classes","PageWrapper","breadCrumb","USER_UPDATE","height","onChange","setActiveVerticalTab","className","tabs","icon","_ref5","_ref6","disabled","getLabelForEnableDisable","_ref7","UserProfile","handleChange","handleSubmit","onCancel","type","handleCheck","resetButtonLabel","handleOpen","handleSelect","rolesList","ResetPassword","handleChangeResetPasswordForm","handleResetPassword","heading","handleEnableDisableUser","prop_types_default","func","isRequired","users_update_UsersUpdate","es","notifier","withNotifier","withUserManagement","theme","root","backgroundColor","palette","paper","minWidth","withTheme","chunks","users_update_jsx","Layout","__webpack_exports__","lodash__WEBPACK_IMPORTED_MODULE_0___default","isString","trim","isEmpty","trimObject","object","each","key","components_BreadCrumb_BreadCrumb","module","route","Link","textDecoration","to","label","PageWrapper_PageWrapper","createElement","Fragment","PageWrapper_jsx","defaultProps","alignItems","spacing","unit","margin","react_redux__WEBPACK_IMPORTED_MODULE_0__","StyledTypography","_materialLib__WEBPACK_IMPORTED_MODULE_4__","marginBottom","StyledPaper","boxShadow","StyledFormControlLabel","StyledCheckbox","_constants__WEBPACK_IMPORTED_MODULE_5__","GridWrapper","container","StyledGrid","InputLabelRef","createUser","operationType","MenuProps","PaperProps","_useState2","_slicedToArray","react__WEBPACK_IMPORTED_MODULE_0__","labelWidth","setLabelWidth","react_dom__WEBPACK_IMPORTED_MODULE_1___default","findDOMNode","offsetWidth","formatData","items","lodash__WEBPACK_IMPORTED_MODULE_3__","permissionObj","action","textField","borderColor","fullWidth","required","formControl","react__WEBPACK_IMPORTED_MODULE_0___default","ref","_ref2","htmlFor","multiple","input","renderValue","chips","chip","xs","sm","formLabel","control","btnWrapper","submit","onClick","size","progress","_Link__WEBPACK_IMPORTED_MODULE_6__","DENIM","float","textTransform","colorSwitchBase","&$colorChecked","& + $colorBar","CURIOS_BLUE","colorBar","colorChecked","fontWeight","checkboxWrapper","marginTop","flexWrap","isActiveUser","currentPassword","react_redux__WEBPACK_IMPORTED_MODULE_1__","_actions_notifier__WEBPACK_IMPORTED_MODULE_7__","_actions_withNotifier__WEBPACK_IMPORTED_MODULE_8__","_actions_withUser__WEBPACK_IMPORTED_MODULE_6__","marginRight"],"mappings":"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","file":"users-update.5f94ba99.chunk.js","sourcesContent":["/* eslint-disable import/no-duplicates */\n/* eslint-disable react/sort-comp */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  get,\n  assign,\n  extend,\n  find,\n  map,\n  filter,\n  some,\n  each,\n  every,\n  chain,\n  omit,\n  pick,\n  isEqual,\n} from 'lodash';\nimport {\n  USER_PROFILE_FIELDS,\n  API_URLS,\n  MESSAGES,\n  BREADCRUMBS,\n  DEFAULT_PERMISSIONS,\n  RESET_PASSWORD_FIELDS,\n  ROLES,\n  COLORS,\n} from '../../constants';\nimport {\n  withStyles,\n  Typography,\n  Tabs,\n  Tab,\n  LockOpen,\n  Edit,\n  PowerOff,\n  Tooltip,\n} from '../../materialLib';\nimport formHelper from '../../lib/formHelper';\nimport UserProfile from '../../components/UserProfile';\nimport ResetPassword from '../reset-password/ResetPassword';\nimport PageWrapper from '../../components/PageWrapper';\nimport history from '../../history';\nimport { openNotifier } from '../../actions/notifier';\nimport withNotifier from '../../actions/withNotifier';\nimport withUserManagement from '../../actions/withUserManagement';\n\nfunction TabContainer({ children }) {\n  return (\n    <Typography\n      component=\"div\"\n      style={{\n        padding: 10,\n        width: '100%',\n        minHeight: '88vh',\n        maxHeight: '88vh',\n        overflow: 'auto',\n      }}\n    >\n      {children}\n    </Typography>\n  );\n}\n\nconst VerticalTabs = withStyles({\n  flexContainer: {\n    flexDirection: 'column',\n    width: 80,\n  },\n  indicator: {\n    display: 'none',\n  },\n})(Tabs);\n\nconst MyTab = withStyles({\n  selected: {\n    color: COLORS.NAVY_BLUE,\n    background: 'rgba(0, 0, 0, 0.23)',\n  },\n})(Tab);\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500,\n  },\n  tabs: {\n    minWidth: 80,\n  },\n});\n\nclass UsersUpdate extends React.Component {\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    openNotifier: PropTypes.func,\n    userManagement: PropTypes.object,\n    classes: PropTypes.object.isRequired,\n  };\n\n  static contextTypes = {\n    fetch: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    openNotifier: () => { },\n    userManagement: {},\n  };\n\n  state = {\n    formData: {\n      firstName: '',\n      lastName: '',\n      username: '',\n      password: '',\n      permissions: [],\n      roles: ['User'],\n    },\n    error: {\n      firstName: '',\n      lastName: '',\n      username: '',\n      password: '',\n    },\n    loading: false,\n    resetPasswordLoading: false,\n    modalOpen: false,\n    activeIndex: 0,\n  };\n\n  componentDidMount() {\n    this.getResponse();\n  }\n\n  getResponse = async () => {\n    const { fetch } = this.context;\n    const { userManagement } = this.props;\n    const { formData: baseFormData } = this.state;\n    let newPermissions = get(\n      userManagement,\n      'userManagement.permissions.length',\n    )\n      ? get(userManagement, 'permissions')\n      : DEFAULT_PERMISSIONS;\n    try {\n      const response = await fetch(`${API_URLS.users}/${this.props.params.id}`);\n      let formData = await response.json();\n      formData = assign(baseFormData, formData.resources);\n      let { permissions } = formData;\n      let { roles } = formData;\n      // Formatting permissions data for UI\n      permissions = map(permissions, permission =>\n        extend(permission, { checked: true }),\n      );\n      newPermissions = [\n        ...filter(\n          newPermissions,\n          obj => !find(permissions, { name: obj.name }),\n        ),\n        ...permissions,\n      ];\n      roles = map(roles, role => role.role);\n      formData = { ...formData, permissions: newPermissions, roles };\n      this.setState({\n        formData,\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  isValidResetPasswordForm = () => {\n    const { formData, error } = this.state;\n    const { username, newPassword } = formData;\n    if (some([username, newPassword], formHelper.isInputEmpty)) {\n      each(RESET_PASSWORD_FIELDS, item => {\n        error[item] = formHelper.isInputEmpty(formData[item])\n          ? MESSAGES.mandatoryFields\n          : '';\n      });\n    }\n\n    this.setState({ error });\n\n    return every(error, formHelper.isInputEmpty);\n  };\n\n  isValidUserDetails = () => {\n    const { formData, error } = this.state;\n    const { firstName, lastName, username } = formData;\n    if (some([username, firstName, lastName], formHelper.isInputEmpty)) {\n      each(USER_PROFILE_FIELDS, item => {\n        error[item] = formHelper.isInputEmpty(formData[item])\n          ? MESSAGES.mandatoryFields\n          : '';\n      });\n    }\n\n    this.setState({ error });\n\n    return every(error, formHelper.isInputEmpty);\n  };\n\n  handleSubmit = async e => {\n    const { fetch } = this.context;\n    let { formData } = this.state;\n    const { permissions } = formData;\n    let { roles } = formData;\n    roles = map(roles, role => ({ role }));\n    formData = {\n      ...formData,\n      permissions: chain(permissions)\n        .filter({ checked: true })\n        .map(item => omit(item, 'checked'))\n        .value(),\n      roles,\n    };\n    e.preventDefault();\n\n    const isValid = await this.isValidUserDetails();\n\n    if (!isValid || !get(formData, 'roles.length')) {\n      await this.props.openNotifier({\n        openNotify: true,\n        message: MESSAGES.emptyField,\n        variant: 'warning',\n      });\n      return;\n    }\n\n    await this.setState({ loading: true });\n\n    try {\n      const response = await fetch(\n        `${API_URLS.users}/${this.props.params.id}`,\n        {\n          method: 'PUT',\n          body: JSON.stringify(formData),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        },\n      );\n      const data = await response.json();\n      if (data.statusCode === 201) {\n        await this.getResponse();\n        await this.props.openNotifier({\n          openNotify: true,\n          message: MESSAGES.user.update.success,\n          variant: 'success',\n        });\n        history.push('/user-management');\n      } else {\n        await this.props.openNotifier({\n          openNotify: true,\n          message: data.resources || data.message,\n          variant: 'error',\n        });\n      }\n      await this.setState({ loading: false });\n    } catch (er) {\n      await this.setState({ loading: false });\n    }\n  };\n\n  handleResetPassword = async e => {\n    const { fetch } = this.context;\n    const { formData } = this.state;\n    e.preventDefault();\n\n    const isValid = await this.isValidResetPasswordForm();\n\n    if (!isValid) {\n      await this.props.openNotifier({\n        openNotify: true,\n        message: MESSAGES.emptyField,\n        variant: 'warning',\n      });\n      return;\n    }\n\n    await this.setState({ resetPasswordLoading: true });\n    try {\n      const response = await fetch(`${API_URLS.resetPassword}`, {\n        method: 'POST',\n        body: JSON.stringify(pick(formData, ['username', 'newPassword'])),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        await this.props.openNotifier({\n          openNotify: true,\n          message: data.resources || data.message,\n          variant: 'error',\n        });\n      } else {\n        await this.props.openNotifier({\n          openNotify: true,\n          message: MESSAGES.resetPassword.success,\n          variant: 'success',\n        });\n        history.push('/user-management');\n      }\n      await this.getResponse();\n      await this.setState({ modalOpen: false, resetPasswordLoading: false });\n    } catch (er) {\n      await this.setState({ modalOpen: false, resetPasswordLoading: false });\n    }\n  };\n\n  handleEnableDisableUser = async e => {\n    e.preventDefault();\n\n    const { fetch } = this.context;\n    const { formData } = this.state;\n    const { profiles } = formData;\n    const isNormalUser = chain(profiles)\n      .find({ email: formData.username })\n      .value();\n    const loginInfo = isEqual(\n      get(isNormalUser, 'loginInfo.providerID'),\n      'credentials',\n    );\n\n    const isValid = await this.isValidResetPasswordForm();\n    if (!loginInfo && !isValid) {\n      await this.props.openNotifier({\n        openNotify: true,\n        message: MESSAGES.emptyField,\n        variant: 'warning',\n      });\n      return;\n    }\n\n    await this.setState({ resetPasswordLoading: true });\n    try {\n      const response = await fetch(\n        `${loginInfo ? API_URLS.disableUser : API_URLS.enableUser}`,\n        {\n          method: 'POST',\n          body: loginInfo\n            ? JSON.stringify(pick(formData, ['username']))\n            : JSON.stringify(pick(formData, ['username', 'newPassword'])),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        },\n      );\n      const data = await response.json();\n      if (!response.ok) {\n        await this.props.openNotifier({\n          openNotify: true,\n          message: data.resources || data.message,\n          variant: 'error',\n        });\n      } else {\n        await this.props.openNotifier({\n          openNotify: true,\n          message: data.resources,\n          variant: 'success',\n        });\n        history.push('/user-management');\n      }\n      await this.getResponse();\n      await this.setState({ modalOpen: false, resetPasswordLoading: false });\n    } catch (er) {\n      await this.setState({ modalOpen: false, resetPasswordLoading: false });\n    }\n  };\n\n  handleChange = e => {\n    const { formData, error } = this.state;\n    const { id, value } = e && e.target;\n    formData[id] = value;\n    error[id] = formHelper.isInputEmpty(formData[id])\n      ? MESSAGES.mandatoryFields\n      : '';\n    this.setState({ formData, error });\n  };\n\n  handleChangeResetPasswordForm = e => {\n    const { formData, error } = this.state;\n    const { id, value } = e && e.target;\n    formData[id] = value;\n    error[id] = formHelper.isInputEmpty(formData[id])\n      ? MESSAGES.mandatoryFields\n      : '';\n    this.setState({ formData, error });\n  };\n\n  handleCheck = name => event => {\n    const { formData } = this.state;\n    let { permissions } = formData;\n    permissions = filter(permissions, item => item.name !== event.target.value);\n    permissions = [\n      ...permissions,\n      { name: event.target.value, checked: event.target.checked },\n    ];\n    this.setState({ formData: { ...formData, permissions } });\n  };\n\n  onCancel = () => {\n    history.push('/user-management');\n  };\n\n  handleClose = () => {\n    this.setState({ modalOpen: false });\n  };\n\n  handleOpen = () => {\n    this.setState({ modalOpen: true });\n  };\n\n  handleSelect = event => {\n    const { formData } = this.state;\n    let { roles } = formData;\n    roles = event.target.value;\n    if (!event.target.value.length) {\n      return;\n    }\n    this.setState({\n      formData: {\n        ...formData,\n        roles,\n      },\n    });\n  };\n\n  setActiveVerticalTab = (_, activeIndex) => {\n    const { formData, error } = this.state;\n    this.setState({ activeIndex });\n    this.setState({ formData: omit(formData, ['newPassword']) });\n    this.setState({ error: omit(error, ['newPassword']) });\n  };\n\n  checkIfEnabledOrDisabledUser = () =>\n    isEqual(\n      get(\n        chain(get(this.state, 'formData.profiles'))\n          .find({ email: get(this.state, 'formData.username') })\n          .value(),\n        'loginInfo.providerID',\n      ),\n      'credentials',\n    );\n\n  getLabelForEnableDisable = () =>\n    this.checkIfEnabledOrDisabledUser() ? 'Disable user' : 'Enable user';\n\n  render() {\n    const {\n      formData,\n      error,\n      loading,\n      resetPasswordLoading,\n      activeIndex,\n    } = this.state;\n    const { classes } = this.props;\n    return (\n      <PageWrapper\n        breadCrumb={BREADCRUMBS.USER_UPDATE}\n        style={{ width: '100%', height: 'auto' }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            width: '100%',\n          }}\n        >\n          <VerticalTabs\n            value={activeIndex || 0}\n            onChange={this.setActiveVerticalTab}\n          >\n            <MyTab\n              className={classes.tabs}\n              icon={\n                <Tooltip title=\"Edit Details\" aria-label=\"Edit Details\">\n                  <Edit />\n                </Tooltip>\n              }\n            />\n            <MyTab\n              className={classes.tabs}\n              icon={\n                <Tooltip title=\"Reset Password\" aria-label=\"Reset Password\">\n                  <LockOpen />\n                </Tooltip>\n              }\n              disabled={!this.checkIfEnabledOrDisabledUser()}\n            />\n            <MyTab\n              className={classes.tabs}\n              icon={\n                <Tooltip\n                  title={this.getLabelForEnableDisable()}\n                  aria-label={this.getLabelForEnableDisable()}\n                >\n                  <PowerOff />\n                </Tooltip>\n              }\n            />\n          </VerticalTabs>\n          {activeIndex === 0 && (\n            <TabContainer>\n              <UserProfile\n                formData={formData}\n                error={error}\n                handleChange={this.handleChange}\n                handleSubmit={this.handleSubmit}\n                onCancel={this.onCancel}\n                type=\"Save\"\n                loading={loading}\n                handleCheck={this.handleCheck}\n                resetButtonLabel=\"Reset password\"\n                handleOpen={this.handleOpen}\n                handleSelect={this.handleSelect}\n                rolesList={ROLES}\n              />\n            </TabContainer>\n          )}\n          {activeIndex === 1 && (\n            <TabContainer>\n              <ResetPassword\n                formData={formData}\n                error={error}\n                handleChange={this.handleChangeResetPasswordForm}\n                handleSubmit={this.handleResetPassword}\n                onCancel={this.onCancel}\n                type=\"Submit\"\n                loading={resetPasswordLoading}\n                heading=\"Reset password\"\n              />\n            </TabContainer>\n          )}\n          {activeIndex === 2 && (\n            <TabContainer>\n              <ResetPassword\n                formData={formData}\n                error={error}\n                handleChange={this.handleChangeResetPasswordForm}\n                handleSubmit={this.handleEnableDisableUser}\n                onCancel={this.onCancel}\n                type={this.getLabelForEnableDisable()}\n                loading={resetPasswordLoading}\n                heading=\"Enable or disable the user\"\n              />\n            </TabContainer>\n          )}\n        </div>\n      </PageWrapper>\n    );\n  }\n}\n\nexport default connect(null, {\n  openNotifier,\n})(\n  withNotifier(\n    withUserManagement(withStyles(styles, { withTheme: true })(UsersUpdate)),\n  ),\n);\n","import React from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport UsersUpdate from './UsersUpdate';\n\nconst title = 'Update User';\n\nasync function action({ params }) {\n  return {\n    chunks: ['users-update'],\n    title,\n    component: (\n      <Layout>\n        <UsersUpdate title={title} params={params} />\n      </Layout>\n    ),\n  };\n}\n\nexport default action;\n","import _ from 'lodash';\n\nexport default {\n  isInputEmpty: value =>\n    _.isString(value) ? !_.trim(value) : _.isEmpty(value),\n  trimObject: object =>\n    // eslint-disable-next-line no-param-reassign,no-return-assign\n    _.each(object, (value, key) => (object[key] = _.trim(value))),\n};\n","/* eslint-disable react/prop-types */\n/* eslint-disable import/no-extraneous-dependencies */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { map } from 'lodash';\nimport {\n    Breadcrumbs,\n    Typography,\n} from '../../materialLib';\nimport Link from '../Link';\n\nconst BreadCrumb = props => (\n  <Breadcrumbs aria-label=\"Breadcrumb\">\n    {map(props.breadCrumb, module => {\n      if (module.route) {\n        return (\n          <Link\n            key={module.label}\n            style={{ textDecoration: 'none' }}\n            to={module.route}\n          >\n            {module.label}\n          </Link>\n        );\n      }\n      return (\n        <Typography key={module.label} color=\"textPrimary\">\n          {module.label}\n        </Typography>\n      );\n    })}\n  </Breadcrumbs>\n);\n\nBreadCrumb.propTypes = {\n  breadCrumb: PropTypes.array.isRequired,\n};\n\nexport default BreadCrumb;\n","/* eslint-disable react/prop-types */\n/* eslint-disable import/no-extraneous-dependencies */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUndefined } from 'lodash';\nimport BreadCrumb from '../BreadCrumb';\nimport { Paper, withStyles } from '../../materialLib';\n\nconst styles = theme => ({\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\n      .spacing.unit * 3}px`,\n    margin: `${theme.spacing.unit * 5}px auto 0`,\n    width: '40%',\n  },\n});\n\nconst PageWrapper = props => {\n  const { children, breadCrumb, classes, style } = props;\n  return (\n    <>\n      <BreadCrumb breadCrumb={breadCrumb} />\n      <Paper className={classes.paper} style={!isUndefined(style) && style}>\n        {children}\n      </Paper>\n    </>\n  );\n};\n\nPageWrapper.propTypes = {\n  children: PropTypes.node,\n  breadCrumb: PropTypes.array,\n  classes: PropTypes.object.isRequired,\n  style: PropTypes.object,\n};\n\nPageWrapper.defaultProps = {\n  style: {},\n  breadCrumb: [],\n  children: []\n};\n\nexport default withStyles(styles)(PageWrapper);\n","import { connect } from 'react-redux';\n\nexport default component => connect(({ userManagement }) => ({ userManagement }))(component);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable import/no-extraneous-dependencies */\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { map, sortBy, each, includes, capitalize, isEqual } from 'lodash';\nimport {\n  Button,\n  withStyles,\n  TextField,\n  CircularProgress,\n  Checkbox,\n  Grid,\n  FormControlLabel,\n  Paper,\n  Typography,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  ListItemText,\n  OutlinedInput,\n  Chip,\n} from '../../materialLib';\nimport { COLORS, ITEM_HEIGHT, ITEM_PADDING_TOP } from '../../constants';\nimport Link from '../Link';\n\nconst StyledTypography = withStyles({\n  root: {\n    marginBottom: 10,\n  },\n})(Typography);\n\nconst StyledPaper = withStyles({\n  root: {\n    padding: 15,\n    marginBottom: 20,\n    width: '100%',\n    boxShadow: 'none',\n  },\n})(Paper);\n\nconst StyledFormControlLabel = withStyles({\n  root: {\n    display: '-webkit-box',\n  },\n})(FormControlLabel);\n\nconst StyledCheckbox = withStyles({\n  root: {\n    color: `${COLORS.NAVY_BLUE} !important`,\n    display: 'inline-block',\n    padding: `0 12px`,\n  },\n})(Checkbox);\n\nconst GridWrapper = withStyles({\n  container: {\n    padding: 10,\n  },\n})(Grid);\n\nconst StyledGrid = withStyles({\n  item: {\n    padding: `0  !important`,\n    margin: `0 0 20px`,\n  },\n})(Grid);\n\nconst styles = theme => ({\n  submit: {\n    backgroundColor: COLORS.NAVY_BLUE,\n    margin: `0 ${theme.spacing.unit}px ${theme.spacing.unit}px 0 `,\n    textTransform: 'capitalize',\n    float: 'right',\n  },\n  btnWrapper: {\n    margin: `${theme.spacing.unit * 3}px auto`,\n  },\n  progress: {\n    margin: 0,\n    color: 'white',\n  },\n\n  root: {\n    display: 'block',\n  },\n  colorSwitchBase: {\n    color: COLORS.NAVY_BLUE,\n    '&$colorChecked': {\n      color: COLORS.NAVY_BLUE,\n      '& + $colorBar': {\n        backgroundColor: COLORS.CURIOS_BLUE,\n      },\n    },\n  },\n  colorBar: {\n    color: COLORS.NAVY_BLUE,\n  },\n  colorChecked: {\n    color: COLORS.NAVY_BLUE,\n  },\n\n  formLabel: {\n    color: COLORS.NAVY_BLUE,\n    margin: 0,\n    fontWeight: 'bold',\n  },\n  checkboxWrapper: {},\n  formControl: {\n    minWidth: 120,\n    width: '100%',\n    marginTop: 10,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: theme.spacing.unit / 4,\n  },\n});\n\nconst UserProfile = props => {\n  let InputLabelRef = null;\n\n  const {\n    classes,\n    formData,\n    error,\n    handleChange,\n    handleSubmit,\n    type,\n    createUser,\n    onCancel,\n    loading,\n    handleCheck,\n    handleOpen,\n    resetButtonLabel,\n    handleSelect,\n    rolesList,\n    style,\n    operationType,\n  } = props;\n\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: style,\n      },\n    },\n  };\n  const {\n    username,\n    firstName,\n    password,\n    lastName,\n    permissions,\n    roles,\n  } = formData;\n  const [labelWidth, setLabelWidth] = useState(0);\n  useEffect(\n    () =>\n      setLabelWidth(\n        labelWidth => ReactDOM.findDOMNode(InputLabelRef).offsetWidth,\n      ),\n    [],\n  );\n\n  const formatData = key => {\n    let items = [];\n    each(permissions, permission => {\n      const permissionObj = permission;\n      if (includes(permission.name, 'READ') && permission.name !== 'READ') {\n        permissionObj.action = 'READ';\n      } else if (includes(permission.name, 'CREATE')) {\n        permissionObj.action = 'CREATE';\n      } else if (includes(permission.name, 'MODIFY')) {\n        permissionObj.action = 'MODIFY';\n      } else if (includes(permission.name, 'REMOVE')) {\n        permissionObj.action = 'REMOVE';\n      } else if (includes(permission.name, 'DELETE')) {\n        permissionObj.action = 'DELETE';\n      } else {\n        permissionObj.action = 'WRITE';\n      }\n      if (includes(permission.name, key)) {\n        items = [...items, permissionObj];\n      }\n    });\n    return sortBy(items, ['name']);\n  };\n\n  return (\n    <form>\n      <StyledPaper>\n        <StyledTypography variant=\"h5\" component=\"h3\">\n          Basic details\n        </StyledTypography>\n        <TextField\n          id=\"firstName\"\n          label=\"First Name\"\n          className={classes.textField}\n          value={capitalize(firstName)}\n          onChange={handleChange}\n          margin=\"normal\"\n          variant=\"outlined\"\n          style={{ borderColor: error.firstName ? 'red' : '' }}\n          fullWidth\n          required\n        />\n        <TextField\n          id=\"lastName\"\n          label=\"Last Name\"\n          className={classes.textField}\n          value={capitalize(lastName)}\n          onChange={handleChange}\n          margin=\"normal\"\n          variant=\"outlined\"\n          style={{ borderColor: error.lastName ? 'red' : '' }}\n          fullWidth\n          required\n        />\n        <TextField\n          id=\"username\"\n          label=\"User Name\"\n          className={classes.textField}\n          value={username}\n          onChange={handleChange}\n          margin=\"normal\"\n          variant=\"outlined\"\n          style={{ borderColor: error.username ? 'red' : '' }}\n          fullWidth\n          required\n          disabled={!createUser}\n        />\n        {createUser && (\n          <TextField\n            id=\"password\"\n            label=\"Password\"\n            className={classes.textField}\n            value={password}\n            onChange={handleChange}\n            margin=\"normal\"\n            variant=\"outlined\"\n            style={{ borderColor: error.password ? 'red' : '' }}\n            type=\"password\"\n            fullWidth\n            required\n          />\n        )}\n        <FormControl\n          required\n          variant=\"outlined\"\n          className={classes.formControl}\n        >\n          <InputLabel\n            ref={ref => {\n              InputLabelRef = ref;\n            }}\n            htmlFor=\"outlined-age-native-simple\"\n          >\n            Roles\n          </InputLabel>\n          <Select\n            multiple\n            value={roles}\n            onChange={handleSelect}\n            input={\n              <OutlinedInput\n                labelWidth={labelWidth}\n                name=\"Users\"\n                id=\"outlined-age-native-simple\"\n              />\n            }\n            renderValue={selected => (\n              <div className={classes.chips}>\n                {selected.map(value => (\n                  <Chip key={value} label={value} className={classes.chip} />\n                ))}\n              </div>\n            )}\n            MenuProps={MenuProps}\n          >\n            {rolesList.map(user => (\n              <MenuItem key={user} value={user}>\n                {user}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </StyledPaper>\n      <StyledPaper>\n        <StyledTypography variant=\"h5\" component=\"h3\">\n          Permissions\n        </StyledTypography>\n        <GridWrapper container spacing={24}>\n          <StyledGrid item xs={6} sm={3}>\n            <p className={classes.formLabel}>CONTAINER</p>\n            {map(formatData('CONTAINER'), permission => (\n              <StyledFormControlLabel\n                control={\n                  <StyledCheckbox\n                    checked={permission.checked}\n                    value={permission.name}\n                    onChange={handleCheck(permission.name)}\n                  />\n                }\n                label={permission.action}\n                key={permission.name}\n              />\n            ))}\n          </StyledGrid>\n          <StyledGrid item xs={6} sm={3}>\n            <p className={classes.formLabel}>REPOSITORY</p>\n            {map(formatData('REPOSITORY'), permission => (\n              <StyledFormControlLabel\n                control={\n                  <StyledCheckbox\n                    checked={permission.checked}\n                    value={permission.name}\n                    onChange={handleCheck(permission.name)}\n                  />\n                }\n                label={permission.action}\n                key={permission.name}\n              />\n            ))}\n          </StyledGrid>\n          <StyledGrid item xs={6} sm={3}>\n            <p className={classes.formLabel}>TYPE</p>\n            {map(formatData('TYPE'), permission => (\n              <StyledFormControlLabel\n                control={\n                  <StyledCheckbox\n                    checked={permission.checked}\n                    value={permission.name}\n                    onChange={handleCheck(permission.name)}\n                  />\n                }\n                label={permission.action}\n                key={permission.name}\n              />\n            ))}\n          </StyledGrid>\n          <StyledGrid item xs={6} sm={3}>\n            <p className={classes.formLabel}>USER</p>\n            {map(formatData('USER'), permission => (\n              <StyledFormControlLabel\n                control={\n                  <StyledCheckbox\n                    checked={permission.checked}\n                    value={permission.name}\n                    onChange={handleCheck(permission.name)}\n                  />\n                }\n                label={permission.action}\n                key={permission.name}\n              />\n            ))}\n          </StyledGrid>\n          <StyledGrid item xs={6} sm={3}>\n            <p className={classes.formLabel}>ARTIFACT</p>\n            {map(formatData('ARTIFACT'), permission => (\n              <StyledFormControlLabel\n                control={\n                  <StyledCheckbox\n                    checked={permission.checked}\n                    value={permission.name}\n                    onChange={handleCheck(permission.name)}\n                  />\n                }\n                label={permission.action}\n                key={permission.name}\n              />\n            ))}\n          </StyledGrid>\n        </GridWrapper>\n      </StyledPaper>\n      <div className={classes.btnWrapper}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={onCancel}\n        >\n          Cancel\n        </Button>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={handleSubmit}\n        >\n          {loading ? (\n            <CircularProgress size={22} className={classes.progress} />\n          ) : (\n              type\n            )}\n        </Button>\n        {isEqual(operationType, 'changePassword') && (\n          <Link\n            style={{\n              textDecoration: 'none',\n              color: COLORS.DENIM,\n              float: 'left',\n            }}\n            onClick={handleOpen}\n            to=\"#\"\n          >\n            {resetButtonLabel}\n          </Link>\n        )}\n      </div>\n    </form>\n  );\n};\n\nUserProfile.propTypes = {\n  classes: PropTypes.object.isRequired,\n  formData: PropTypes.object.isRequired,\n  error: PropTypes.object.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired,\n  createUser: PropTypes.bool,\n  onCancel: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  handleCheck: PropTypes.func.isRequired,\n  handleOpen: PropTypes.func,\n  resetButtonLabel: PropTypes.string,\n  handleSelect: PropTypes.func,\n  rolesList: PropTypes.array,\n  theme: PropTypes.object,\n  operationType: PropTypes.string,\n};\n\nUserProfile.defaultProps = {\n  createUser: false,\n  handleOpen: () => { },\n  resetButtonLabel: null,\n  handleSelect: () => { },\n  theme: {},\n  rolesList: [],\n  operationType: null,\n};\n\nexport default withStyles(styles, { theme: true })(UserProfile);\n","/* eslint-disable import/no-duplicates */\n/* eslint-disable react/sort-comp */\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { isEqual } from 'lodash';\nimport {\n  Button,\n  withStyles,\n  TextField,\n  CircularProgress,\n  Paper,\n  Typography,\n} from '../../materialLib';\nimport { COLORS } from '../../constants';\nimport withUser from '../../actions/withUser';\nimport { openNotifier } from '../../actions/notifier';\nimport withNotifier from '../../actions/withNotifier';\n\nconst StyledTypography = withStyles({\n  root: {\n    marginBottom: 10,\n  },\n})(Typography);\n\nconst StyledPaper = withStyles({\n  root: {\n    padding: 15,\n    marginBottom: 20,\n    width: '100%',\n    boxShadow: 'none',\n  },\n})(Paper);\n\nconst styles = theme => ({\n  submit: {\n    backgroundColor: COLORS.NAVY_BLUE,\n    marginRight: theme.spacing.unit,\n    textTransform: 'capitalize',\n    float: 'right',\n  },\n  formControl: {\n    margin: `0 ${theme.spacing.unit * 5}px ${theme.spacing.unit * 3}px 0`,\n  },\n  btnWrapper: {\n    margin: `${theme.spacing.unit * 3}px auto`,\n  },\n  progress: {\n    margin: 0,\n    color: 'white',\n  },\n});\n\nconst ResetPassword = props => {\n  const {\n    classes,\n    handleChange,\n    handleSubmit,\n    onCancel,\n    formData,\n    error,\n    type,\n    loading,\n    isActiveUser,\n    heading,\n  } = props;\n\n  const { username, newPassword, currentPassword } = formData;\n\n  return (\n    <form>\n      <StyledPaper>\n        <StyledTypography variant=\"h5\" component=\"h3\">\n          {heading}\n        </StyledTypography>\n        <TextField\n          id=\"name\"\n          label=\"Username\"\n          className={classes.textField}\n          value={username}\n          margin=\"normal\"\n          variant=\"outlined\"\n          style={{ borderColor: error.username ? 'red' : '' }}\n          fullWidth\n          disabled\n          required\n        />\n        {isEqual(type, 'changePassword') && (\n          <TextField\n            id=\"currentPassword\"\n            label=\"Current Password\"\n            className={classes.textField}\n            value={currentPassword}\n            onChange={handleChange}\n            margin=\"normal\"\n            variant=\"outlined\"\n            style={{ borderColor: error.currentPassword ? 'red' : '' }}\n            type=\"password\"\n            fullWidth\n            required\n          />\n        )}\n        {(!isEqual(type, 'Disable user') || isEqual(type, 'Submit')) && (\n          <TextField\n            id=\"newPassword\"\n            label=\"New Password\"\n            className={classes.textField}\n            value={newPassword}\n            onChange={handleChange}\n            margin=\"normal\"\n            variant=\"outlined\"\n            style={{ borderColor: error.newPassword ? 'red' : '' }}\n            type=\"password\"\n            disabled={isActiveUser}\n            fullWidth\n            required\n          />\n        )}\n      </StyledPaper>\n      <div className={classes.btnWrapper}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={onCancel}\n        >\n          Cancel\n        </Button>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={handleSubmit}\n        >\n          {loading ? (\n            <CircularProgress size={22} className={classes.progress} />\n          ) : (\n              type\n            )}\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nResetPassword.propTypes = {\n  classes: PropTypes.object,\n  handleChange: PropTypes.func,\n  handleSubmit: PropTypes.func,\n  formData: PropTypes.object,\n  onCancel: PropTypes.func,\n  error: PropTypes.object,\n  type: PropTypes.string,\n  loading: PropTypes.bool,\n  isActiveUser: PropTypes.bool,\n  heading: PropTypes.string,\n};\n\nResetPassword.defaultProps = {\n  classes: {},\n  handleChange: () => { },\n  formData: {},\n  handleSubmit: () => { },\n  onCancel: () => { },\n  error: {},\n  type: null,\n  loading: false,\n  isActiveUser: false,\n  heading: null,\n};\n\nexport default connect(null, {\n  openNotifier,\n})(withNotifier(withUser(withStyles(styles)(ResetPassword))));\n"],"sourceRoot":""}