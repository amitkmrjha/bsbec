{"version":3,"sources":["w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/routes/users-create/index.js","w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/lib/formHelper.js","w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/actions/withUserManagement.js","w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/components/UserProfile/UserProfile.js","w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/routes/users-create/UsersCreate.js"],"names":["title","_jsx","_components_Layout_Layout__WEBPACK_IMPORTED_MODULE_1__","_UsersCreate__WEBPACK_IMPORTED_MODULE_2__","_callee","regeneratorRuntime","wrap","_context","prev","next","abrupt","chunks","component","stop","this","__webpack_exports__","isInputEmpty","value","lodash__WEBPACK_IMPORTED_MODULE_0___default","a","isString","trim","isEmpty","trimObject","object","each","key","Object","react_redux__WEBPACK_IMPORTED_MODULE_0__","_ref","userManagement","StyledTypography","_materialLib__WEBPACK_IMPORTED_MODULE_4__","root","marginBottom","StyledPaper","padding","width","boxShadow","StyledFormControlLabel","display","StyledCheckbox","color","_constants__WEBPACK_IMPORTED_MODULE_5__","NAVY_BLUE","GridWrapper","container","StyledGrid","item","margin","variant","UserProfile","props","InputLabelRef","classes","formData","error","handleChange","handleSubmit","type","createUser","onCancel","loading","handleCheck","handleOpen","resetButtonLabel","handleSelect","rolesList","style","operationType","MenuProps","PaperProps","maxHeight","username","firstName","password","lastName","permissions","roles","_useState2","_slicedToArray","react__WEBPACK_IMPORTED_MODULE_0__","labelWidth","setLabelWidth","react_dom__WEBPACK_IMPORTED_MODULE_1___default","findDOMNode","offsetWidth","formatData","items","lodash__WEBPACK_IMPORTED_MODULE_3__","permission","permissionObj","name","action","concat","id","label","className","textField","onChange","borderColor","fullWidth","required","disabled","formControl","react__WEBPACK_IMPORTED_MODULE_0___default","createElement","ref","_ref2","htmlFor","multiple","input","renderValue","selected","chips","map","chip","user","_ref3","spacing","xs","sm","formLabel","control","checked","btnWrapper","submit","onClick","size","progress","_Link__WEBPACK_IMPORTED_MODULE_6__","textDecoration","DENIM","float","to","defaultProps","theme","backgroundColor","unit","textTransform","colorSwitchBase","&$colorChecked","& + $colorBar","CURIOS_BLUE","colorBar","colorChecked","fontWeight","checkboxWrapper","minWidth","marginTop","flexWrap","UsersCreate","_this$state","_this","state","_lib_formHelper__WEBPACK_IMPORTED_MODULE_5__","_constants__WEBPACK_IMPORTED_MODULE_4__","mandatoryFields","setState","e","fetch","response","data","context","role","filter","preventDefault","isValid","sent","openNotifier","openNotify","message","emptyField","signUp","method","body","JSON","stringify","headers","Content-Type","json","status","create","success","getUserList","handleClose","_history__WEBPACK_IMPORTED_MODULE_7__","push","t0","console","_this$state2","target","event","_defineProperty","length","Component","_state","_components_UserProfile__WEBPACK_IMPORTED_MODULE_6__","handleSwitch","prop_types__WEBPACK_IMPORTED_MODULE_1___default","func","isRequired","react_redux__WEBPACK_IMPORTED_MODULE_2__","_actions_notifier__WEBPACK_IMPORTED_MODULE_8__","_actions_withNotifier__WEBPACK_IMPORTED_MODULE_9__","_actions_withUserManagement__WEBPACK_IMPORTED_MODULE_10__"],"mappings":"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","file":"users-create.74e8daff.chunk.js","sourcesContent":["import React from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport UsersCreate from './UsersCreate';\n\nconst title = 'Create Users';\n\nasync function action() {\n  return {\n    chunks: ['users-create'],\n    title,\n    component: (\n      <Layout>\n        <UsersCreate title={title} />\n      </Layout>\n    ),\n  };\n}\n\nexport default action;\n","import _ from 'lodash';\n\nexport default {\n  isInputEmpty: value =>\n    _.isString(value) ? !_.trim(value) : _.isEmpty(value),\n  trimObject: object =>\n    // eslint-disable-next-line no-param-reassign,no-return-assign\n    _.each(object, (value, key) => (object[key] = _.trim(value))),\n};\n","import { connect } from 'react-redux';\n\nexport default component => connect(({ userManagement }) => ({ userManagement }))(component);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable import/no-extraneous-dependencies */\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { map, sortBy, each, includes, capitalize, isEqual } from 'lodash';\nimport {\n  Button,\n  withStyles,\n  TextField,\n  CircularProgress,\n  Checkbox,\n  Grid,\n  FormControlLabel,\n  Paper,\n  Typography,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  ListItemText,\n  OutlinedInput,\n  Chip,\n} from '../../materialLib';\nimport { COLORS, ITEM_HEIGHT, ITEM_PADDING_TOP } from '../../constants';\nimport Link from '../Link';\n\nconst StyledTypography = withStyles({\n  root: {\n    marginBottom: 10,\n  },\n})(Typography);\n\nconst StyledPaper = withStyles({\n  root: {\n    padding: 15,\n    marginBottom: 20,\n    width: '100%',\n    boxShadow: 'none',\n  },\n})(Paper);\n\nconst StyledFormControlLabel = withStyles({\n  root: {\n    display: '-webkit-box',\n  },\n})(FormControlLabel);\n\nconst StyledCheckbox = withStyles({\n  root: {\n    color: `${COLORS.NAVY_BLUE} !important`,\n    display: 'inline-block',\n    padding: `0 12px`,\n  },\n})(Checkbox);\n\nconst GridWrapper = withStyles({\n  container: {\n    padding: 10,\n  },\n})(Grid);\n\nconst StyledGrid = withStyles({\n  item: {\n    padding: `0  !important`,\n    margin: `0 0 20px`,\n  },\n})(Grid);\n\nconst styles = theme => ({\n  submit: {\n    backgroundColor: COLORS.NAVY_BLUE,\n    margin: `0 ${theme.spacing.unit}px ${theme.spacing.unit}px 0 `,\n    textTransform: 'capitalize',\n    float: 'right',\n  },\n  btnWrapper: {\n    margin: `${theme.spacing.unit * 3}px auto`,\n  },\n  progress: {\n    margin: 0,\n    color: 'white',\n  },\n\n  root: {\n    display: 'block',\n  },\n  colorSwitchBase: {\n    color: COLORS.NAVY_BLUE,\n    '&$colorChecked': {\n      color: COLORS.NAVY_BLUE,\n      '& + $colorBar': {\n        backgroundColor: COLORS.CURIOS_BLUE,\n      },\n    },\n  },\n  colorBar: {\n    color: COLORS.NAVY_BLUE,\n  },\n  colorChecked: {\n    color: COLORS.NAVY_BLUE,\n  },\n\n  formLabel: {\n    color: COLORS.NAVY_BLUE,\n    margin: 0,\n    fontWeight: 'bold',\n  },\n  checkboxWrapper: {},\n  formControl: {\n    minWidth: 120,\n    width: '100%',\n    marginTop: 10,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: theme.spacing.unit / 4,\n  },\n});\n\nconst UserProfile = props => {\n  let InputLabelRef = null;\n\n  const {\n    classes,\n    formData,\n    error,\n    handleChange,\n    handleSubmit,\n    type,\n    createUser,\n    onCancel,\n    loading,\n    handleCheck,\n    handleOpen,\n    resetButtonLabel,\n    handleSelect,\n    rolesList,\n    style,\n    operationType,\n  } = props;\n\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: style,\n      },\n    },\n  };\n  const {\n    username,\n    firstName,\n    password,\n    lastName,\n    permissions,\n    roles,\n  } = formData;\n  const [labelWidth, setLabelWidth] = useState(0);\n  useEffect(\n    () =>\n      setLabelWidth(\n        labelWidth => ReactDOM.findDOMNode(InputLabelRef).offsetWidth,\n      ),\n    [],\n  );\n\n  const formatData = key => {\n    let items = [];\n    each(permissions, permission => {\n      const permissionObj = permission;\n      if (includes(permission.name, 'READ') && permission.name !== 'READ') {\n        permissionObj.action = 'READ';\n      } else if (includes(permission.name, 'CREATE')) {\n        permissionObj.action = 'CREATE';\n      } else if (includes(permission.name, 'MODIFY')) {\n        permissionObj.action = 'MODIFY';\n      } else if (includes(permission.name, 'REMOVE')) {\n        permissionObj.action = 'REMOVE';\n      } else if (includes(permission.name, 'DELETE')) {\n        permissionObj.action = 'DELETE';\n      } else {\n        permissionObj.action = 'WRITE';\n      }\n      if (includes(permission.name, key)) {\n        items = [...items, permissionObj];\n      }\n    });\n    return sortBy(items, ['name']);\n  };\n\n  return (\n    <form>\n      <StyledPaper>\n        <StyledTypography variant=\"h5\" component=\"h3\">\n          Basic details\n        </StyledTypography>\n        <TextField\n          id=\"firstName\"\n          label=\"First Name\"\n          className={classes.textField}\n          value={capitalize(firstName)}\n          onChange={handleChange}\n          margin=\"normal\"\n          variant=\"outlined\"\n          style={{ borderColor: error.firstName ? 'red' : '' }}\n          fullWidth\n          required\n        />\n        <TextField\n          id=\"lastName\"\n          label=\"Last Name\"\n          className={classes.textField}\n          value={capitalize(lastName)}\n          onChange={handleChange}\n          margin=\"normal\"\n          variant=\"outlined\"\n          style={{ borderColor: error.lastName ? 'red' : '' }}\n          fullWidth\n          required\n        />\n        <TextField\n          id=\"username\"\n          label=\"User Name\"\n          className={classes.textField}\n          value={username}\n          onChange={handleChange}\n          margin=\"normal\"\n          variant=\"outlined\"\n          style={{ borderColor: error.username ? 'red' : '' }}\n          fullWidth\n          required\n          disabled={!createUser}\n        />\n        {createUser && (\n          <TextField\n            id=\"password\"\n            label=\"Password\"\n            className={classes.textField}\n            value={password}\n            onChange={handleChange}\n            margin=\"normal\"\n            variant=\"outlined\"\n            style={{ borderColor: error.password ? 'red' : '' }}\n            type=\"password\"\n            fullWidth\n            required\n          />\n        )}\n        <FormControl\n          required\n          variant=\"outlined\"\n          className={classes.formControl}\n        >\n          <InputLabel\n            ref={ref => {\n              InputLabelRef = ref;\n            }}\n            htmlFor=\"outlined-age-native-simple\"\n          >\n            Roles\n          </InputLabel>\n          <Select\n            multiple\n            value={roles}\n            onChange={handleSelect}\n            input={\n              <OutlinedInput\n                labelWidth={labelWidth}\n                name=\"Users\"\n                id=\"outlined-age-native-simple\"\n              />\n            }\n            renderValue={selected => (\n              <div className={classes.chips}>\n                {selected.map(value => (\n                  <Chip key={value} label={value} className={classes.chip} />\n                ))}\n              </div>\n            )}\n            MenuProps={MenuProps}\n          >\n            {rolesList.map(user => (\n              <MenuItem key={user} value={user}>\n                {user}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </StyledPaper>\n      <StyledPaper>\n        <StyledTypography variant=\"h5\" component=\"h3\">\n          Permissions\n        </StyledTypography>\n        <GridWrapper container spacing={24}>\n          <StyledGrid item xs={6} sm={3}>\n            <p className={classes.formLabel}>CONTAINER</p>\n            {map(formatData('CONTAINER'), permission => (\n              <StyledFormControlLabel\n                control={\n                  <StyledCheckbox\n                    checked={permission.checked}\n                    value={permission.name}\n                    onChange={handleCheck(permission.name)}\n                  />\n                }\n                label={permission.action}\n                key={permission.name}\n              />\n            ))}\n          </StyledGrid>\n          <StyledGrid item xs={6} sm={3}>\n            <p className={classes.formLabel}>REPOSITORY</p>\n            {map(formatData('REPOSITORY'), permission => (\n              <StyledFormControlLabel\n                control={\n                  <StyledCheckbox\n                    checked={permission.checked}\n                    value={permission.name}\n                    onChange={handleCheck(permission.name)}\n                  />\n                }\n                label={permission.action}\n                key={permission.name}\n              />\n            ))}\n          </StyledGrid>\n          <StyledGrid item xs={6} sm={3}>\n            <p className={classes.formLabel}>TYPE</p>\n            {map(formatData('TYPE'), permission => (\n              <StyledFormControlLabel\n                control={\n                  <StyledCheckbox\n                    checked={permission.checked}\n                    value={permission.name}\n                    onChange={handleCheck(permission.name)}\n                  />\n                }\n                label={permission.action}\n                key={permission.name}\n              />\n            ))}\n          </StyledGrid>\n          <StyledGrid item xs={6} sm={3}>\n            <p className={classes.formLabel}>USER</p>\n            {map(formatData('USER'), permission => (\n              <StyledFormControlLabel\n                control={\n                  <StyledCheckbox\n                    checked={permission.checked}\n                    value={permission.name}\n                    onChange={handleCheck(permission.name)}\n                  />\n                }\n                label={permission.action}\n                key={permission.name}\n              />\n            ))}\n          </StyledGrid>\n          <StyledGrid item xs={6} sm={3}>\n            <p className={classes.formLabel}>ARTIFACT</p>\n            {map(formatData('ARTIFACT'), permission => (\n              <StyledFormControlLabel\n                control={\n                  <StyledCheckbox\n                    checked={permission.checked}\n                    value={permission.name}\n                    onChange={handleCheck(permission.name)}\n                  />\n                }\n                label={permission.action}\n                key={permission.name}\n              />\n            ))}\n          </StyledGrid>\n        </GridWrapper>\n      </StyledPaper>\n      <div className={classes.btnWrapper}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={onCancel}\n        >\n          Cancel\n        </Button>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={handleSubmit}\n        >\n          {loading ? (\n            <CircularProgress size={22} className={classes.progress} />\n          ) : (\n              type\n            )}\n        </Button>\n        {isEqual(operationType, 'changePassword') && (\n          <Link\n            style={{\n              textDecoration: 'none',\n              color: COLORS.DENIM,\n              float: 'left',\n            }}\n            onClick={handleOpen}\n            to=\"#\"\n          >\n            {resetButtonLabel}\n          </Link>\n        )}\n      </div>\n    </form>\n  );\n};\n\nUserProfile.propTypes = {\n  classes: PropTypes.object.isRequired,\n  formData: PropTypes.object.isRequired,\n  error: PropTypes.object.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired,\n  createUser: PropTypes.bool,\n  onCancel: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  handleCheck: PropTypes.func.isRequired,\n  handleOpen: PropTypes.func,\n  resetButtonLabel: PropTypes.string,\n  handleSelect: PropTypes.func,\n  rolesList: PropTypes.array,\n  theme: PropTypes.object,\n  operationType: PropTypes.string,\n};\n\nUserProfile.defaultProps = {\n  createUser: false,\n  handleOpen: () => { },\n  resetButtonLabel: null,\n  handleSelect: () => { },\n  theme: {},\n  rolesList: [],\n  operationType: null,\n};\n\nexport default withStyles(styles, { theme: true })(UserProfile);\n","/* eslint-disable import/no-duplicates */\n/* eslint-disable react/sort-comp */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { some, each, every, chain, omit, filter, get, map } from 'lodash';\nimport {\n  SIGNUP_FIELDS,\n  API_URLS,\n  MESSAGES,\n  DEFAULT_PERMISSIONS,\n  ROLES,\n} from '../../constants';\nimport formHelper from '../../lib/formHelper';\nimport UserProfile from '../../components/UserProfile';\nimport history from '../../history';\nimport { openNotifier } from '../../actions/notifier';\nimport withNotifier from '../../actions/withNotifier';\nimport withUserManagement from '../../actions/withUserManagement';\n\nclass UsersCreate extends React.Component {\n  static propTypes = {\n    openNotifier: PropTypes.func,\n    handleClose: PropTypes.func.isRequired,\n    getUserList: PropTypes.func.isRequired,\n  };\n\n  static contextTypes = { fetch: PropTypes.func.isRequired };\n\n  static defaultProps = {\n    openNotifier: () => { },\n  };\n\n  state = {\n    formData: {\n      firstName: '',\n      lastName: '',\n      username: '',\n      password: '',\n      permissions: [],\n      roles: ['User'],\n    },\n    error: {\n      firstName: '',\n      lastName: '',\n      username: '',\n      password: '',\n    },\n    loading: false,\n    checked: false,\n  };\n\n  componentDidMount() {\n    const { formData } = this.state;\n    this.setState({\n      formData: {\n        ...formData,\n        permissions: get(this, 'props.userManagement.permissions.length')\n          ? get(this, 'props.userManagement.permissions')\n          : DEFAULT_PERMISSIONS,\n      },\n    });\n  }\n\n  isValid = () => {\n    const { formData, error } = this.state;\n    const { firstName, lastName, username, password } = formData;\n    if (\n      some([username, password, firstName, lastName], formHelper.isInputEmpty)\n    ) {\n      each(SIGNUP_FIELDS, item => {\n        error[item] = formHelper.isInputEmpty(formData[item])\n          ? MESSAGES.mandatoryFields\n          : '';\n      });\n    }\n\n    this.setState({ error });\n\n    return every(error, formHelper.isInputEmpty);\n  };\n\n  handleSubmit = async e => {\n    const { fetch } = this.context;\n    let { formData } = this.state;\n    const { permissions } = formData;\n    let { roles } = formData;\n    roles = map(roles, role => ({ role }));\n    formData = {\n      ...formData,\n      permissions: chain(permissions)\n        .filter({ checked: true })\n        .map(item => omit(item, 'checked'))\n        .value(),\n      roles,\n    };\n\n    e.preventDefault();\n\n    const isValid = await this.isValid();\n    if (!isValid || !get(formData, 'roles.length')) {\n      await this.props.openNotifier({\n        openNotify: true,\n        message: MESSAGES.emptyField,\n        variant: 'warning',\n      });\n      return;\n    }\n\n    await this.setState({\n      loading: true,\n    });\n\n    try {\n      const response = await fetch(`${API_URLS.signUp}`, {\n        method: 'POST',\n        body: JSON.stringify(formData),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      const data = await response.json();\n      if (response.status === 200) {\n        await this.props.openNotifier({\n          openNotify: true,\n          message: MESSAGES.user.create.success,\n          variant: 'success',\n        });\n      } else {\n        await this.props.openNotifier({\n          openNotify: true,\n          message: data.message,\n          variant: 'error',\n        });\n      }\n      await this.props.getUserList();\n      await this.props.handleClose();\n      await this.setState({ loading: false });\n      history.push('/user-management');\n    } catch (er) {\n      console.error(er);\n    }\n  };\n\n  handleChange = e => {\n    const { formData, error } = this.state;\n    const { id, value } = e && e.target;\n    formData[id] = value;\n    error[id] = formHelper.isInputEmpty(formData[id])\n      ? MESSAGES.mandatoryFields\n      : '';\n    this.setState({ formData, error });\n  };\n\n  handleSwitch = name => event => {\n    this.setState({ [name]: event.target.checked });\n  };\n\n  onCancel = () => {\n    this.props.handleClose();\n    history.push('/user-management');\n  };\n\n  handleCheck = name => event => {\n    const { formData } = this.state;\n    let { permissions } = formData;\n    permissions = filter(permissions, item => item.name !== event.target.value);\n    permissions = [\n      ...permissions,\n      { name: event.target.value, checked: event.target.checked },\n    ];\n    this.setState({ formData: { ...formData, permissions } });\n  };\n\n  handleSelect = event => {\n    const { formData } = this.state;\n    let { roles } = formData;\n    roles = event.target.value;\n    if (!event.target.value.length) {\n      return;\n    }\n    this.setState({\n      formData: {\n        ...formData,\n        roles,\n      },\n    });\n  };\n\n  render() {\n    const { formData, error, loading, checked } = this.state;\n    return (\n      <UserProfile\n        formData={formData}\n        error={error}\n        handleChange={this.handleChange}\n        handleSubmit={this.handleSubmit}\n        type=\"Create\"\n        onCancel={this.onCancel}\n        createUser\n        loading={loading}\n        checked={checked}\n        handleSwitch={this.handleSwitch}\n        handleCheck={this.handleCheck}\n        handleSelect={this.handleSelect}\n        rolesList={ROLES}\n        style={{ width: '60%' }}\n      />\n    );\n  }\n}\n\nexport default connect(null, {\n  openNotifier,\n})(withNotifier(withUserManagement(UsersCreate)));\n"],"sourceRoot":""}