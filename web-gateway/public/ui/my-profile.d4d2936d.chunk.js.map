{"version":3,"sources":["w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/routes/my-profile/MyProfile.js","w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/routes/my-profile/index.js","w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/lib/formHelper.js","w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/components/BreadCrumb/BreadCrumb.js","w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/components/PageWrapper/PageWrapper.js","w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/actions/withUserManagement.js","w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/components/UserProfile/UserProfile.js","w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/routes/reset-password/ResetPassword.js"],"names":["MyProfile_MyProfile","formData","firstName","lastName","username","password","permissions","roles","error","loading","modalOpen","resetPasswordLoading","_callee","fetch","userManagement","baseFormData","newPermissions","response","regeneratorRuntime","wrap","_context","prev","next","_this","context","props","state","Object","lodash","constants","users","concat","params","id","sent","json","resources","permission","checked","obj","name","_toConsumableArray","role","setState","t0","console","stop","this","_this$state","newPassword","currentPassword","formHelper","isInputEmpty","item","mandatoryFields","_this$state2","_callee2","e","data","_context2","filter","map","value","preventDefault","isValidUserDetails","openNotifier","openNotify","message","emptyField","variant","abrupt","method","body","JSON","stringify","headers","Content-Type","statusCode","user","update","success","getResponse","src_history","push","_callee3","_context3","isValidResetPasswordForm","changePassword","ok","resetPassword","_this$state3","_ref3","target","_this$state4","_ref4","event","react_default","a","Component","_state","_jsx","PageWrapper","breadCrumb","MY_PROFILE","style","width","height","boxShadow","UserProfile","handleChange","handleSubmit","onCancel","redirectToHome","type","handleCheck","handleOpen","resetButtonLabel","handleSelect","rolesList","operationType","materialLib","onClose","handleClose","aria-labelledby","open","ResetPassword","handleChangeResetPasswordForm","handleChangePassword","prop_types_default","func","isRequired","my_profile_MyProfile","es","notifier","withNotifier","withUserManagement","theme","root","backgroundColor","palette","background","paper","withTheme","title","_ref","chunks","component","my_profile_jsx","Layout","__webpack_exports__","lodash__WEBPACK_IMPORTED_MODULE_0___default","isString","trim","isEmpty","trimObject","object","each","key","components_BreadCrumb_BreadCrumb","aria-label","module","route","Link","textDecoration","to","label","color","PageWrapper_PageWrapper","children","classes","createElement","Fragment","PageWrapper_jsx","className","defaultProps","display","flexDirection","alignItems","padding","spacing","unit","margin","react_redux__WEBPACK_IMPORTED_MODULE_0__","StyledTypography","_materialLib__WEBPACK_IMPORTED_MODULE_4__","marginBottom","StyledPaper","StyledFormControlLabel","StyledCheckbox","_constants__WEBPACK_IMPORTED_MODULE_5__","NAVY_BLUE","GridWrapper","container","StyledGrid","InputLabelRef","createUser","MenuProps","PaperProps","maxHeight","_useState2","_slicedToArray","react__WEBPACK_IMPORTED_MODULE_0__","labelWidth","setLabelWidth","react_dom__WEBPACK_IMPORTED_MODULE_1___default","findDOMNode","offsetWidth","formatData","items","lodash__WEBPACK_IMPORTED_MODULE_3__","permissionObj","action","textField","onChange","borderColor","fullWidth","required","disabled","formControl","react__WEBPACK_IMPORTED_MODULE_0___default","ref","_ref2","htmlFor","multiple","input","renderValue","selected","chips","chip","xs","sm","formLabel","control","btnWrapper","submit","onClick","size","progress","_Link__WEBPACK_IMPORTED_MODULE_6__","DENIM","float","textTransform","colorSwitchBase","&$colorChecked","& + $colorBar","CURIOS_BLUE","colorBar","colorChecked","fontWeight","checkboxWrapper","minWidth","marginTop","flexWrap","isActiveUser","heading","react_redux__WEBPACK_IMPORTED_MODULE_1__","_actions_notifier__WEBPACK_IMPORTED_MODULE_7__","_actions_withNotifier__WEBPACK_IMPORTED_MODULE_8__","_actions_withUser__WEBPACK_IMPORTED_MODULE_6__","marginRight"],"mappings":"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","file":"my-profile.d4d2936d.chunk.js","sourcesContent":["/* eslint-disable import/no-duplicates */\n/* eslint-disable react/sort-comp */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  get,\n  assign,\n  extend,\n  find,\n  map,\n  filter,\n  some,\n  each,\n  every,\n  chain,\n  omit,\n  pick,\n} from 'lodash';\nimport {\n  USER_PROFILE_FIELDS,\n  API_URLS,\n  MESSAGES,\n  BREADCRUMBS,\n  DEFAULT_PERMISSIONS,\n  CHANGE_PASSWORD_FIELDS,\n  ROLES,\n} from '../../constants';\nimport {\n  withStyles,\n  Typography,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n} from '../../materialLib';\nimport formHelper from '../../lib/formHelper';\nimport UserProfile from '../../components/UserProfile/UserProfile';\nimport ResetPassword from '../reset-password/ResetPassword';\nimport PageWrapper from '../../components/PageWrapper/PageWrapper';\nimport history from '../../history';\nimport { openNotifier } from '../../actions/notifier';\nimport withNotifier from '../../actions/withNotifier';\nimport withUserManagement from '../../actions/withUserManagement';\n\nfunction TabContainer({ children, dir }) {\n  return (\n    <Typography component=\"div\" dir={dir} style={{ padding: 8 * 3 }}>\n      {children}\n    </Typography>\n  );\n}\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n  dir: PropTypes.string.isRequired,\n};\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500,\n  },\n});\n\nclass MyProfile extends React.Component {\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    openNotifier: PropTypes.func,\n    userManagement: PropTypes.object,\n  };\n\n  static contextTypes = {\n    fetch: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    openNotifier: () => { },\n    userManagement: {},\n  };\n\n  state = {\n    formData: {\n      firstName: '',\n      lastName: '',\n      username: '',\n      password: '',\n      permissions: [],\n      roles: ['User'],\n    },\n    error: {\n      firstName: '',\n      lastName: '',\n      username: '',\n      password: '',\n    },\n    loading: false,\n    modalOpen: false,\n    resetPasswordLoading: false,\n  };\n\n  componentDidMount() {\n    this.getResponse();\n  }\n\n  getResponse = async () => {\n    const { fetch } = this.context;\n    const { userManagement } = this.props;\n    const { formData: baseFormData } = this.state;\n    let newPermissions = get(\n      userManagement,\n      'userManagement.permissions.length',\n    )\n      ? get(userManagement, 'permissions')\n      : DEFAULT_PERMISSIONS;\n    try {\n      const response = await fetch(`${API_URLS.users}/${this.props.params.id}`);\n      let formData = await response.json();\n      formData = assign(baseFormData, formData.resources);\n      let { permissions } = formData;\n      let { roles } = formData;\n      // Formatting permissions data for UI\n      permissions = map(permissions, permission =>\n        extend(permission, { checked: true }),\n      );\n      newPermissions = [\n        ...filter(\n          newPermissions,\n          obj => !find(permissions, { name: obj.name }),\n        ),\n        ...permissions,\n      ];\n      roles = map(roles, role => role.role);\n      formData = { ...formData, permissions: newPermissions, roles };\n      this.setState({\n        formData,\n      });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  isValidResetPasswordForm = () => {\n    const { formData, error } = this.state;\n    const { username, newPassword, currentPassword } = formData;\n    if (\n      some([username, newPassword, currentPassword], formHelper.isInputEmpty)\n    ) {\n      each(CHANGE_PASSWORD_FIELDS, item => {\n        error[item] = formHelper.isInputEmpty(formData[item])\n          ? MESSAGES.mandatoryFields\n          : '';\n      });\n    }\n\n    this.setState({ error });\n\n    return every(error, formHelper.isInputEmpty);\n  };\n\n  isValidUserDetails = () => {\n    const { formData, error } = this.state;\n    const { firstName, lastName, username, password } = formData;\n    if (\n      some([username, password, firstName, lastName], formHelper.isInputEmpty)\n    ) {\n      each(USER_PROFILE_FIELDS, item => {\n        error[item] = formHelper.isInputEmpty(formData[item])\n          ? MESSAGES.mandatoryFields\n          : '';\n      });\n    }\n\n    this.setState({ error });\n\n    return every(error, formHelper.isInputEmpty);\n  };\n\n  handleSubmit = async e => {\n    const { fetch } = this.context;\n    let { formData } = this.state;\n    const { permissions } = formData;\n    let { roles } = formData;\n    roles = map(roles, role => ({ role }));\n    formData = {\n      ...formData,\n      permissions: chain(permissions)\n        .filter({ checked: true })\n        .map(item => omit(item, 'checked'))\n        .value(),\n      roles,\n    };\n\n    e.preventDefault();\n\n    const isValid = await this.isValidUserDetails();\n\n    if (!isValid || !get(formData, 'roles.length')) {\n      await this.props.openNotifier({\n        openNotify: true,\n        message: MESSAGES.emptyField,\n        variant: 'warning',\n      });\n      return;\n    }\n\n    await this.setState({ loading: true });\n\n    try {\n      const response = await fetch(\n        `${API_URLS.users}/${this.props.params.id}`,\n        {\n          method: 'PUT',\n          body: JSON.stringify(formData),\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        },\n      );\n      const data = await response.json();\n      if (data.statusCode === 201) {\n        await this.props.openNotifier(\n          {\n            openNotify: true,\n            message: MESSAGES.user.update.success,\n            variant: 'success',\n          },\n          () => {\n            this.getResponse();\n          },\n        );\n        history.push('/home');\n      } else {\n        await this.props.openNotifier({\n          openNotify: true,\n          message: data.message,\n          variant: 'error',\n        });\n      }\n      await this.setState({ loading: false });\n    } catch (er) {\n      console.error(er);\n      await this.setState({ loading: false });\n    }\n  };\n\n  handleChangePassword = async e => {\n    const { fetch } = this.context;\n    const { formData } = this.state;\n    e.preventDefault();\n\n    const isValid = await this.isValidResetPasswordForm();\n\n    if (!isValid) {\n      await this.props.openNotifier({\n        openNotify: true,\n        message: MESSAGES.emptyField,\n        variant: 'warning',\n      });\n      return;\n    }\n\n    await this.setState({ resetPasswordLoading: true });\n\n    try {\n      const response = await fetch(`${API_URLS.changePassword}`, {\n        method: 'POST',\n        body: JSON.stringify(\n          pick(formData, ['username', 'newPassword', 'currentPassword']),\n        ),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        this.props.openNotifier({\n          openNotify: true,\n          message: data.resources,\n          variant: 'error',\n        });\n      }\n      this.setState({ modalOpen: false, resetPasswordLoading: false });\n      this.getResponse();\n      this.props.openNotifier({\n        openNotify: true,\n        message: MESSAGES.resetPassword.success,\n        variant: 'success',\n      });\n    } catch (er) {\n      this.setState({ modalOpen: false, resetPasswordLoading: false });\n    }\n  };\n\n  handleChange = e => {\n    const { formData, error } = this.state;\n    const { id, value } = e && e.target;\n    formData[id] = value;\n    error[id] = formHelper.isInputEmpty(formData[id])\n      ? MESSAGES.mandatoryFields\n      : '';\n    this.setState({ formData, error });\n  };\n\n  handleChangeResetPasswordForm = e => {\n    const { formData, error } = this.state;\n    const { id, value } = e && e.target;\n    formData[id] = value;\n    error[id] = formHelper.isInputEmpty(formData[id])\n      ? MESSAGES.mandatoryFields\n      : '';\n    this.setState({ formData, error });\n  };\n\n  handleCheck = name => event => {\n    const { formData } = this.state;\n    let { permissions } = formData;\n    permissions = filter(permissions, item => item.name !== event.target.value);\n    permissions = [\n      ...permissions,\n      { name: event.target.value, checked: event.target.checked },\n    ];\n    this.setState({ formData: { ...formData, permissions } });\n  };\n\n  onCancel = () => {\n    this.setState({ modalOpen: false });\n  };\n\n  redirectToHome = () => {\n    history.push('/home');\n  };\n\n  handleClose = () => {\n    this.setState({ modalOpen: false });\n  };\n\n  handleOpen = () => {\n    this.setState({ modalOpen: true });\n  };\n\n  handleSelect = event => {\n    const { formData } = this.state;\n    let { roles } = formData;\n    roles = event.target.value;\n    this.setState({\n      formData: {\n        ...formData,\n        roles,\n      },\n    });\n  };\n\n  render() {\n    const {\n      formData,\n      error,\n      loading,\n      modalOpen,\n      resetPasswordLoading,\n    } = this.state;\n    return (\n      <PageWrapper\n        breadCrumb={BREADCRUMBS.MY_PROFILE}\n        style={{ width: '100%', height: 'auto', boxShadow: 'none' }}\n      >\n        <UserProfile\n          formData={formData}\n          error={error}\n          handleChange={this.handleChange}\n          handleSubmit={this.handleSubmit}\n          onCancel={this.redirectToHome}\n          type=\"Save\"\n          loading={loading}\n          handleCheck={this.handleCheck}\n          handleOpen={this.handleOpen}\n          resetButtonLabel=\"Change password\"\n          handleSelect={this.handleSelect}\n          rolesList={ROLES}\n          operationType=\"changePassword\"\n        />\n        <Dialog\n          onClose={this.handleClose}\n          aria-labelledby=\"customized-dialog-title\"\n          open={modalOpen}\n        >\n          <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\n            Reset password\n          </DialogTitle>\n          <DialogContent>\n            <ResetPassword\n              formData={formData}\n              error={error}\n              handleChange={this.handleChangeResetPasswordForm}\n              handleSubmit={this.handleChangePassword}\n              onCancel={this.onCancel}\n              type=\"changePassword\"\n              loading={resetPasswordLoading}\n            />\n          </DialogContent>\n        </Dialog>\n      </PageWrapper>\n    );\n  }\n}\n\nexport default connect(null, {\n  openNotifier,\n})(\n  withNotifier(\n    withUserManagement(withStyles(styles, { withTheme: true })(MyProfile)),\n  ),\n);\n","import React from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport MyProfile from './MyProfile';\n\nconst title = 'My Profile';\n\nasync function action({ params }) {\n  return {\n    chunks: ['users-update'],\n    title,\n    component: (\n      <Layout>\n        <MyProfile title={title} params={params} />\n      </Layout>\n    ),\n  };\n}\n\nexport default action;\n","import _ from 'lodash';\n\nexport default {\n  isInputEmpty: value =>\n    _.isString(value) ? !_.trim(value) : _.isEmpty(value),\n  trimObject: object =>\n    // eslint-disable-next-line no-param-reassign,no-return-assign\n    _.each(object, (value, key) => (object[key] = _.trim(value))),\n};\n","/* eslint-disable react/prop-types */\n/* eslint-disable import/no-extraneous-dependencies */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { map } from 'lodash';\nimport {\n    Breadcrumbs,\n    Typography,\n} from '../../materialLib';\nimport Link from '../Link';\n\nconst BreadCrumb = props => (\n  <Breadcrumbs aria-label=\"Breadcrumb\">\n    {map(props.breadCrumb, module => {\n      if (module.route) {\n        return (\n          <Link\n            key={module.label}\n            style={{ textDecoration: 'none' }}\n            to={module.route}\n          >\n            {module.label}\n          </Link>\n        );\n      }\n      return (\n        <Typography key={module.label} color=\"textPrimary\">\n          {module.label}\n        </Typography>\n      );\n    })}\n  </Breadcrumbs>\n);\n\nBreadCrumb.propTypes = {\n  breadCrumb: PropTypes.array.isRequired,\n};\n\nexport default BreadCrumb;\n","/* eslint-disable react/prop-types */\n/* eslint-disable import/no-extraneous-dependencies */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUndefined } from 'lodash';\nimport BreadCrumb from '../BreadCrumb';\nimport { Paper, withStyles } from '../../materialLib';\n\nconst styles = theme => ({\n  paper: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme\n      .spacing.unit * 3}px`,\n    margin: `${theme.spacing.unit * 5}px auto 0`,\n    width: '40%',\n  },\n});\n\nconst PageWrapper = props => {\n  const { children, breadCrumb, classes, style } = props;\n  return (\n    <>\n      <BreadCrumb breadCrumb={breadCrumb} />\n      <Paper className={classes.paper} style={!isUndefined(style) && style}>\n        {children}\n      </Paper>\n    </>\n  );\n};\n\nPageWrapper.propTypes = {\n  children: PropTypes.node,\n  breadCrumb: PropTypes.array,\n  classes: PropTypes.object.isRequired,\n  style: PropTypes.object,\n};\n\nPageWrapper.defaultProps = {\n  style: {},\n  breadCrumb: [],\n  children: []\n};\n\nexport default withStyles(styles)(PageWrapper);\n","import { connect } from 'react-redux';\n\nexport default component => connect(({ userManagement }) => ({ userManagement }))(component);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable import/no-extraneous-dependencies */\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { map, sortBy, each, includes, capitalize, isEqual } from 'lodash';\nimport {\n  Button,\n  withStyles,\n  TextField,\n  CircularProgress,\n  Checkbox,\n  Grid,\n  FormControlLabel,\n  Paper,\n  Typography,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  ListItemText,\n  OutlinedInput,\n  Chip,\n} from '../../materialLib';\nimport { COLORS, ITEM_HEIGHT, ITEM_PADDING_TOP } from '../../constants';\nimport Link from '../Link';\n\nconst StyledTypography = withStyles({\n  root: {\n    marginBottom: 10,\n  },\n})(Typography);\n\nconst StyledPaper = withStyles({\n  root: {\n    padding: 15,\n    marginBottom: 20,\n    width: '100%',\n    boxShadow: 'none',\n  },\n})(Paper);\n\nconst StyledFormControlLabel = withStyles({\n  root: {\n    display: '-webkit-box',\n  },\n})(FormControlLabel);\n\nconst StyledCheckbox = withStyles({\n  root: {\n    color: `${COLORS.NAVY_BLUE} !important`,\n    display: 'inline-block',\n    padding: `0 12px`,\n  },\n})(Checkbox);\n\nconst GridWrapper = withStyles({\n  container: {\n    padding: 10,\n  },\n})(Grid);\n\nconst StyledGrid = withStyles({\n  item: {\n    padding: `0  !important`,\n    margin: `0 0 20px`,\n  },\n})(Grid);\n\nconst styles = theme => ({\n  submit: {\n    backgroundColor: COLORS.NAVY_BLUE,\n    margin: `0 ${theme.spacing.unit}px ${theme.spacing.unit}px 0 `,\n    textTransform: 'capitalize',\n    float: 'right',\n  },\n  btnWrapper: {\n    margin: `${theme.spacing.unit * 3}px auto`,\n  },\n  progress: {\n    margin: 0,\n    color: 'white',\n  },\n\n  root: {\n    display: 'block',\n  },\n  colorSwitchBase: {\n    color: COLORS.NAVY_BLUE,\n    '&$colorChecked': {\n      color: COLORS.NAVY_BLUE,\n      '& + $colorBar': {\n        backgroundColor: COLORS.CURIOS_BLUE,\n      },\n    },\n  },\n  colorBar: {\n    color: COLORS.NAVY_BLUE,\n  },\n  colorChecked: {\n    color: COLORS.NAVY_BLUE,\n  },\n\n  formLabel: {\n    color: COLORS.NAVY_BLUE,\n    margin: 0,\n    fontWeight: 'bold',\n  },\n  checkboxWrapper: {},\n  formControl: {\n    minWidth: 120,\n    width: '100%',\n    marginTop: 10,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: theme.spacing.unit / 4,\n  },\n});\n\nconst UserProfile = props => {\n  let InputLabelRef = null;\n\n  const {\n    classes,\n    formData,\n    error,\n    handleChange,\n    handleSubmit,\n    type,\n    createUser,\n    onCancel,\n    loading,\n    handleCheck,\n    handleOpen,\n    resetButtonLabel,\n    handleSelect,\n    rolesList,\n    style,\n    operationType,\n  } = props;\n\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: style,\n      },\n    },\n  };\n  const {\n    username,\n    firstName,\n    password,\n    lastName,\n    permissions,\n    roles,\n  } = formData;\n  const [labelWidth, setLabelWidth] = useState(0);\n  useEffect(\n    () =>\n      setLabelWidth(\n        labelWidth => ReactDOM.findDOMNode(InputLabelRef).offsetWidth,\n      ),\n    [],\n  );\n\n  const formatData = key => {\n    let items = [];\n    each(permissions, permission => {\n      const permissionObj = permission;\n      if (includes(permission.name, 'READ') && permission.name !== 'READ') {\n        permissionObj.action = 'READ';\n      } else if (includes(permission.name, 'CREATE')) {\n        permissionObj.action = 'CREATE';\n      } else if (includes(permission.name, 'MODIFY')) {\n        permissionObj.action = 'MODIFY';\n      } else if (includes(permission.name, 'REMOVE')) {\n        permissionObj.action = 'REMOVE';\n      } else if (includes(permission.name, 'DELETE')) {\n        permissionObj.action = 'DELETE';\n      } else {\n        permissionObj.action = 'WRITE';\n      }\n      if (includes(permission.name, key)) {\n        items = [...items, permissionObj];\n      }\n    });\n    return sortBy(items, ['name']);\n  };\n\n  return (\n    <form>\n      <StyledPaper>\n        <StyledTypography variant=\"h5\" component=\"h3\">\n          Basic details\n        </StyledTypography>\n        <TextField\n          id=\"firstName\"\n          label=\"First Name\"\n          className={classes.textField}\n          value={capitalize(firstName)}\n          onChange={handleChange}\n          margin=\"normal\"\n          variant=\"outlined\"\n          style={{ borderColor: error.firstName ? 'red' : '' }}\n          fullWidth\n          required\n        />\n        <TextField\n          id=\"lastName\"\n          label=\"Last Name\"\n          className={classes.textField}\n          value={capitalize(lastName)}\n          onChange={handleChange}\n          margin=\"normal\"\n          variant=\"outlined\"\n          style={{ borderColor: error.lastName ? 'red' : '' }}\n          fullWidth\n          required\n        />\n        <TextField\n          id=\"username\"\n          label=\"User Name\"\n          className={classes.textField}\n          value={username}\n          onChange={handleChange}\n          margin=\"normal\"\n          variant=\"outlined\"\n          style={{ borderColor: error.username ? 'red' : '' }}\n          fullWidth\n          required\n          disabled={!createUser}\n        />\n        {createUser && (\n          <TextField\n            id=\"password\"\n            label=\"Password\"\n            className={classes.textField}\n            value={password}\n            onChange={handleChange}\n            margin=\"normal\"\n            variant=\"outlined\"\n            style={{ borderColor: error.password ? 'red' : '' }}\n            type=\"password\"\n            fullWidth\n            required\n          />\n        )}\n        <FormControl\n          required\n          variant=\"outlined\"\n          className={classes.formControl}\n        >\n          <InputLabel\n            ref={ref => {\n              InputLabelRef = ref;\n            }}\n            htmlFor=\"outlined-age-native-simple\"\n          >\n            Roles\n          </InputLabel>\n          <Select\n            multiple\n            value={roles}\n            onChange={handleSelect}\n            input={\n              <OutlinedInput\n                labelWidth={labelWidth}\n                name=\"Users\"\n                id=\"outlined-age-native-simple\"\n              />\n            }\n            renderValue={selected => (\n              <div className={classes.chips}>\n                {selected.map(value => (\n                  <Chip key={value} label={value} className={classes.chip} />\n                ))}\n              </div>\n            )}\n            MenuProps={MenuProps}\n          >\n            {rolesList.map(user => (\n              <MenuItem key={user} value={user}>\n                {user}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </StyledPaper>\n      <StyledPaper>\n        <StyledTypography variant=\"h5\" component=\"h3\">\n          Permissions\n        </StyledTypography>\n        <GridWrapper container spacing={24}>\n          <StyledGrid item xs={6} sm={3}>\n            <p className={classes.formLabel}>CONTAINER</p>\n            {map(formatData('CONTAINER'), permission => (\n              <StyledFormControlLabel\n                control={\n                  <StyledCheckbox\n                    checked={permission.checked}\n                    value={permission.name}\n                    onChange={handleCheck(permission.name)}\n                  />\n                }\n                label={permission.action}\n                key={permission.name}\n              />\n            ))}\n          </StyledGrid>\n          <StyledGrid item xs={6} sm={3}>\n            <p className={classes.formLabel}>REPOSITORY</p>\n            {map(formatData('REPOSITORY'), permission => (\n              <StyledFormControlLabel\n                control={\n                  <StyledCheckbox\n                    checked={permission.checked}\n                    value={permission.name}\n                    onChange={handleCheck(permission.name)}\n                  />\n                }\n                label={permission.action}\n                key={permission.name}\n              />\n            ))}\n          </StyledGrid>\n          <StyledGrid item xs={6} sm={3}>\n            <p className={classes.formLabel}>TYPE</p>\n            {map(formatData('TYPE'), permission => (\n              <StyledFormControlLabel\n                control={\n                  <StyledCheckbox\n                    checked={permission.checked}\n                    value={permission.name}\n                    onChange={handleCheck(permission.name)}\n                  />\n                }\n                label={permission.action}\n                key={permission.name}\n              />\n            ))}\n          </StyledGrid>\n          <StyledGrid item xs={6} sm={3}>\n            <p className={classes.formLabel}>USER</p>\n            {map(formatData('USER'), permission => (\n              <StyledFormControlLabel\n                control={\n                  <StyledCheckbox\n                    checked={permission.checked}\n                    value={permission.name}\n                    onChange={handleCheck(permission.name)}\n                  />\n                }\n                label={permission.action}\n                key={permission.name}\n              />\n            ))}\n          </StyledGrid>\n          <StyledGrid item xs={6} sm={3}>\n            <p className={classes.formLabel}>ARTIFACT</p>\n            {map(formatData('ARTIFACT'), permission => (\n              <StyledFormControlLabel\n                control={\n                  <StyledCheckbox\n                    checked={permission.checked}\n                    value={permission.name}\n                    onChange={handleCheck(permission.name)}\n                  />\n                }\n                label={permission.action}\n                key={permission.name}\n              />\n            ))}\n          </StyledGrid>\n        </GridWrapper>\n      </StyledPaper>\n      <div className={classes.btnWrapper}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={onCancel}\n        >\n          Cancel\n        </Button>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={handleSubmit}\n        >\n          {loading ? (\n            <CircularProgress size={22} className={classes.progress} />\n          ) : (\n              type\n            )}\n        </Button>\n        {isEqual(operationType, 'changePassword') && (\n          <Link\n            style={{\n              textDecoration: 'none',\n              color: COLORS.DENIM,\n              float: 'left',\n            }}\n            onClick={handleOpen}\n            to=\"#\"\n          >\n            {resetButtonLabel}\n          </Link>\n        )}\n      </div>\n    </form>\n  );\n};\n\nUserProfile.propTypes = {\n  classes: PropTypes.object.isRequired,\n  formData: PropTypes.object.isRequired,\n  error: PropTypes.object.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  type: PropTypes.string.isRequired,\n  createUser: PropTypes.bool,\n  onCancel: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  handleCheck: PropTypes.func.isRequired,\n  handleOpen: PropTypes.func,\n  resetButtonLabel: PropTypes.string,\n  handleSelect: PropTypes.func,\n  rolesList: PropTypes.array,\n  theme: PropTypes.object,\n  operationType: PropTypes.string,\n};\n\nUserProfile.defaultProps = {\n  createUser: false,\n  handleOpen: () => { },\n  resetButtonLabel: null,\n  handleSelect: () => { },\n  theme: {},\n  rolesList: [],\n  operationType: null,\n};\n\nexport default withStyles(styles, { theme: true })(UserProfile);\n","/* eslint-disable import/no-duplicates */\n/* eslint-disable react/sort-comp */\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { isEqual } from 'lodash';\nimport {\n  Button,\n  withStyles,\n  TextField,\n  CircularProgress,\n  Paper,\n  Typography,\n} from '../../materialLib';\nimport { COLORS } from '../../constants';\nimport withUser from '../../actions/withUser';\nimport { openNotifier } from '../../actions/notifier';\nimport withNotifier from '../../actions/withNotifier';\n\nconst StyledTypography = withStyles({\n  root: {\n    marginBottom: 10,\n  },\n})(Typography);\n\nconst StyledPaper = withStyles({\n  root: {\n    padding: 15,\n    marginBottom: 20,\n    width: '100%',\n    boxShadow: 'none',\n  },\n})(Paper);\n\nconst styles = theme => ({\n  submit: {\n    backgroundColor: COLORS.NAVY_BLUE,\n    marginRight: theme.spacing.unit,\n    textTransform: 'capitalize',\n    float: 'right',\n  },\n  formControl: {\n    margin: `0 ${theme.spacing.unit * 5}px ${theme.spacing.unit * 3}px 0`,\n  },\n  btnWrapper: {\n    margin: `${theme.spacing.unit * 3}px auto`,\n  },\n  progress: {\n    margin: 0,\n    color: 'white',\n  },\n});\n\nconst ResetPassword = props => {\n  const {\n    classes,\n    handleChange,\n    handleSubmit,\n    onCancel,\n    formData,\n    error,\n    type,\n    loading,\n    isActiveUser,\n    heading,\n  } = props;\n\n  const { username, newPassword, currentPassword } = formData;\n\n  return (\n    <form>\n      <StyledPaper>\n        <StyledTypography variant=\"h5\" component=\"h3\">\n          {heading}\n        </StyledTypography>\n        <TextField\n          id=\"name\"\n          label=\"Username\"\n          className={classes.textField}\n          value={username}\n          margin=\"normal\"\n          variant=\"outlined\"\n          style={{ borderColor: error.username ? 'red' : '' }}\n          fullWidth\n          disabled\n          required\n        />\n        {isEqual(type, 'changePassword') && (\n          <TextField\n            id=\"currentPassword\"\n            label=\"Current Password\"\n            className={classes.textField}\n            value={currentPassword}\n            onChange={handleChange}\n            margin=\"normal\"\n            variant=\"outlined\"\n            style={{ borderColor: error.currentPassword ? 'red' : '' }}\n            type=\"password\"\n            fullWidth\n            required\n          />\n        )}\n        {(!isEqual(type, 'Disable user') || isEqual(type, 'Submit')) && (\n          <TextField\n            id=\"newPassword\"\n            label=\"New Password\"\n            className={classes.textField}\n            value={newPassword}\n            onChange={handleChange}\n            margin=\"normal\"\n            variant=\"outlined\"\n            style={{ borderColor: error.newPassword ? 'red' : '' }}\n            type=\"password\"\n            disabled={isActiveUser}\n            fullWidth\n            required\n          />\n        )}\n      </StyledPaper>\n      <div className={classes.btnWrapper}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={onCancel}\n        >\n          Cancel\n        </Button>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={handleSubmit}\n        >\n          {loading ? (\n            <CircularProgress size={22} className={classes.progress} />\n          ) : (\n              type\n            )}\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nResetPassword.propTypes = {\n  classes: PropTypes.object,\n  handleChange: PropTypes.func,\n  handleSubmit: PropTypes.func,\n  formData: PropTypes.object,\n  onCancel: PropTypes.func,\n  error: PropTypes.object,\n  type: PropTypes.string,\n  loading: PropTypes.bool,\n  isActiveUser: PropTypes.bool,\n  heading: PropTypes.string,\n};\n\nResetPassword.defaultProps = {\n  classes: {},\n  handleChange: () => { },\n  formData: {},\n  handleSubmit: () => { },\n  onCancel: () => { },\n  error: {},\n  type: null,\n  loading: false,\n  isActiveUser: false,\n  heading: null,\n};\n\nexport default connect(null, {\n  openNotifier,\n})(withNotifier(withUser(withStyles(styles)(ResetPassword))));\n"],"sourceRoot":""}