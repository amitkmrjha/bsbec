{"version":3,"sources":["w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/routes/reset-password/index.js","w:/projects/icax/Syndeia-Cloud/web-gateway/ui/src/routes/reset-password/ResetPassword.js"],"names":["title","_callee","_ref","params","regeneratorRuntime","wrap","_context","prev","next","abrupt","chunks","component","_jsx","_components_Layout_Layout__WEBPACK_IMPORTED_MODULE_1__","_ResetPassword__WEBPACK_IMPORTED_MODULE_2__","stop","this","__webpack_exports__","StyledTypography","Object","_materialLib__WEBPACK_IMPORTED_MODULE_4__","root","marginBottom","StyledPaper","padding","width","boxShadow","ResetPassword","props","classes","handleChange","handleSubmit","onCancel","formData","error","type","loading","isActiveUser","heading","username","newPassword","currentPassword","variant","id","label","className","textField","value","margin","style","borderColor","fullWidth","disabled","required","lodash__WEBPACK_IMPORTED_MODULE_3__","onChange","btnWrapper","color","submit","onClick","size","progress","defaultProps","react_redux__WEBPACK_IMPORTED_MODULE_1__","openNotifier","_actions_notifier__WEBPACK_IMPORTED_MODULE_7__","_actions_withNotifier__WEBPACK_IMPORTED_MODULE_8__","_actions_withUser__WEBPACK_IMPORTED_MODULE_6__","theme","backgroundColor","_constants__WEBPACK_IMPORTED_MODULE_5__","NAVY_BLUE","marginRight","spacing","unit","textTransform","float","formControl","concat"],"mappings":"6iBAIA,IAAMA,EAAQ,oVAEd,SAAAC,EAAAC,GAAA,IAAAC,EAAA,OAAAC,mBAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAwBL,EAAxBD,EAAwBC,OAAxBG,EAAAG,OAAA,UAEIC,QAAS,kBACTV,QACAW,UACEC,EAACC,EAAA,UAAD,EACED,EAACE,EAAA,GAAcd,MAAOA,EAAOG,OAAQA,OAN7C,wBAAAG,EAAAS,SAAAd,EAAAe,gCAYAC,EAAA,mlBCCA,IAAMC,EAAmBC,OAAAC,EAAA,GAAAD,EACvBE,MACEC,aAAc,KAFOH,CAItBC,EAAA,IAEGG,EAAcJ,OAAAC,EAAA,GAAAD,EAClBE,MACEG,QAAS,GACTF,aAAc,GACdG,MAAO,OACPC,UAAW,SALKP,CAOjBC,EAAA,GAqBGO,EAAgB,SAAAC,GAAS,IAE3BC,EAUED,EAVFC,QACAC,EASEF,EATFE,aACAC,EAQEH,EARFG,aACAC,EAOEJ,EAPFI,SACAC,EAMEL,EANFK,SACAC,EAKEN,EALFM,MACAC,EAIEP,EAJFO,KACAC,EAGER,EAHFQ,QACAC,EAEET,EAFFS,aACAC,EACEV,EADFU,QAGMC,EAA2CN,EAA3CM,SAAUC,EAAiCP,EAAjCO,YAAaC,EAAoBR,EAApBQ,gBAE/B,OACE7B,EAAA,iBACEA,EAACW,UAAD,EACEX,EAACM,GAAiBwB,QAAQ,KAAK/B,UAAU,WAAzC,EACG2B,GAEH1B,EAACQ,EAAA,IACCuB,GAAG,OACHC,MAAM,WACNC,UAAWhB,EAAQiB,UACnBC,MAAOR,EACPS,OAAO,SACPN,QAAQ,WACRO,OAASC,YAAahB,EAAMK,SAAW,MAAQ,IAC/CY,WAAA,EACAC,UAAA,EACAC,UAAA,IAEDlC,OAAAmC,EAAA,QAAAnC,CAAQgB,EAAM,mBACbvB,EAACQ,EAAA,IACCuB,GAAG,kBACHC,MAAM,mBACNC,UAAWhB,EAAQiB,UACnBC,MAAON,EACPc,SAAUzB,EACVkB,OAAO,SACPN,QAAQ,WACRO,OAASC,YAAahB,EAAMO,gBAAkB,MAAQ,IACtDN,KAAK,WACLgB,WAAA,EACAE,UAAA,MAGDlC,OAAAmC,EAAA,QAAAnC,CAAQgB,EAAM,iBAAmBhB,OAAAmC,EAAA,QAAAnC,CAAQgB,EAAM,YAChDvB,EAACQ,EAAA,IACCuB,GAAG,cACHC,MAAM,eACNC,UAAWhB,EAAQiB,UACnBC,MAAOP,EACPe,SAAUzB,EACVkB,OAAO,SACPN,QAAQ,WACRO,OAASC,YAAahB,EAAMM,YAAc,MAAQ,IAClDL,KAAK,WACLiB,SAAUf,EACVc,WAAA,EACAE,UAAA,KAINzC,EAAA,OAAKiC,UAAWhB,EAAQ2B,iBAAxB,EACE5C,EAACQ,EAAA,GACCe,KAAK,SACLO,QAAQ,YACRe,MAAM,UACNZ,UAAWhB,EAAQ6B,OACnBC,QAAS3B,QALX,YASApB,EAACQ,EAAA,GACCe,KAAK,SACLO,QAAQ,YACRe,MAAM,UACNZ,UAAWhB,EAAQ6B,OACnBC,QAAS5B,QALX,EAOGK,EACCxB,EAACQ,EAAA,GAAiBwC,KAAM,GAAIf,UAAWhB,EAAQgC,WAE7C1B,MAqBdR,EAAcmC,cACZjC,WACAC,aAAc,aACdG,YACAF,aAAc,aACdC,SAAU,aACVE,SACAC,KAAM,KACNC,SAAS,EACTC,cAAc,EACdC,QAAS,MAGXrB,EAAA,EAAeE,OAAA4C,EAAA,EAAA5C,CAAQ,MACrB6C,aAAAC,EAAA,GADF,CAEG9C,OAAA+C,EAAA,EAAA/C,CAAaA,OAAAgD,EAAA,EAAAhD,CAASA,OAAAC,EAAA,GAAAD,CA7IV,SAAAiD,GAAA,OACbV,QACEW,gBAAiBC,EAAA,EAAOC,UACxBC,YAAaJ,EAAMK,QAAQC,KAC3BC,cAAe,aACfC,MAAO,SAETC,aACE7B,mBAAkC,EAArBoB,EAAMK,QAAQC,KAA3B,OAAAI,OAA8D,EAArBV,EAAMK,QAAQC,KAAvD,SAEFlB,YACER,iBAAgC,EAArBoB,EAAMK,QAAQC,KAAzB,YAEFb,UACEb,OAAQ,EACRS,MAAO,WA8HctC,CAAmBQ","file":"reset-password.2b177aff.chunk.js","sourcesContent":["import React from 'react';\nimport Layout from '../../components/Layout/Layout';\nimport ResetPassword from './ResetPassword';\n\nconst title = 'Reset Password';\n\nasync function action({ params }) {\n  return {\n    chunks: ['reset-password'],\n    title,\n    component: (\n      <Layout>\n        <ResetPassword title={title} params={params} />\n      </Layout>\n    ),\n  };\n}\n\nexport default action;\n","/* eslint-disable import/no-duplicates */\n/* eslint-disable react/sort-comp */\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { isEqual } from 'lodash';\nimport {\n  Button,\n  withStyles,\n  TextField,\n  CircularProgress,\n  Paper,\n  Typography,\n} from '../../materialLib';\nimport { COLORS } from '../../constants';\nimport withUser from '../../actions/withUser';\nimport { openNotifier } from '../../actions/notifier';\nimport withNotifier from '../../actions/withNotifier';\n\nconst StyledTypography = withStyles({\n  root: {\n    marginBottom: 10,\n  },\n})(Typography);\n\nconst StyledPaper = withStyles({\n  root: {\n    padding: 15,\n    marginBottom: 20,\n    width: '100%',\n    boxShadow: 'none',\n  },\n})(Paper);\n\nconst styles = theme => ({\n  submit: {\n    backgroundColor: COLORS.NAVY_BLUE,\n    marginRight: theme.spacing.unit,\n    textTransform: 'capitalize',\n    float: 'right',\n  },\n  formControl: {\n    margin: `0 ${theme.spacing.unit * 5}px ${theme.spacing.unit * 3}px 0`,\n  },\n  btnWrapper: {\n    margin: `${theme.spacing.unit * 3}px auto`,\n  },\n  progress: {\n    margin: 0,\n    color: 'white',\n  },\n});\n\nconst ResetPassword = props => {\n  const {\n    classes,\n    handleChange,\n    handleSubmit,\n    onCancel,\n    formData,\n    error,\n    type,\n    loading,\n    isActiveUser,\n    heading,\n  } = props;\n\n  const { username, newPassword, currentPassword } = formData;\n\n  return (\n    <form>\n      <StyledPaper>\n        <StyledTypography variant=\"h5\" component=\"h3\">\n          {heading}\n        </StyledTypography>\n        <TextField\n          id=\"name\"\n          label=\"Username\"\n          className={classes.textField}\n          value={username}\n          margin=\"normal\"\n          variant=\"outlined\"\n          style={{ borderColor: error.username ? 'red' : '' }}\n          fullWidth\n          disabled\n          required\n        />\n        {isEqual(type, 'changePassword') && (\n          <TextField\n            id=\"currentPassword\"\n            label=\"Current Password\"\n            className={classes.textField}\n            value={currentPassword}\n            onChange={handleChange}\n            margin=\"normal\"\n            variant=\"outlined\"\n            style={{ borderColor: error.currentPassword ? 'red' : '' }}\n            type=\"password\"\n            fullWidth\n            required\n          />\n        )}\n        {(!isEqual(type, 'Disable user') || isEqual(type, 'Submit')) && (\n          <TextField\n            id=\"newPassword\"\n            label=\"New Password\"\n            className={classes.textField}\n            value={newPassword}\n            onChange={handleChange}\n            margin=\"normal\"\n            variant=\"outlined\"\n            style={{ borderColor: error.newPassword ? 'red' : '' }}\n            type=\"password\"\n            disabled={isActiveUser}\n            fullWidth\n            required\n          />\n        )}\n      </StyledPaper>\n      <div className={classes.btnWrapper}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={onCancel}\n        >\n          Cancel\n        </Button>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={handleSubmit}\n        >\n          {loading ? (\n            <CircularProgress size={22} className={classes.progress} />\n          ) : (\n              type\n            )}\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nResetPassword.propTypes = {\n  classes: PropTypes.object,\n  handleChange: PropTypes.func,\n  handleSubmit: PropTypes.func,\n  formData: PropTypes.object,\n  onCancel: PropTypes.func,\n  error: PropTypes.object,\n  type: PropTypes.string,\n  loading: PropTypes.bool,\n  isActiveUser: PropTypes.bool,\n  heading: PropTypes.string,\n};\n\nResetPassword.defaultProps = {\n  classes: {},\n  handleChange: () => { },\n  formData: {},\n  handleSubmit: () => { },\n  onCancel: () => { },\n  error: {},\n  type: null,\n  loading: false,\n  isActiveUser: false,\n  heading: null,\n};\n\nexport default connect(null, {\n  openNotifier,\n})(withNotifier(withUser(withStyles(styles)(ResetPassword))));\n"],"sourceRoot":""}